{"version":3,"sources":["store/common.ts","store/navigation.ts","utils/callBackend.ts","utils/mockData/MOCK_LINES.ts","utils/mockData/MOCK_STATIONS.ts","utils/mockData/MOCK_ROUTES.ts","config.ts","utils/dateHelpers.ts","utils/convertJsonStringToCsv.ts","utils/invertColor.ts","store/effects.ts","store/dataHooks.ts","layout/ComputerBusyStatus.tsx","layout/HeaderContainer.tsx","layout/SideBar.tsx","layout/LayoutContainer.tsx","pages/HomePage/HomePage.tsx","components/NoData.tsx","components/MetroIcon.tsx","components/SourceRoute.tsx","pages/CalculatedPage/OptimizedRoute.tsx","pages/CalculatedPage/CalculatedPage.tsx","pages/QueuePage/QueuePage.tsx","pages/SelectStationsPage/SelectByTransfer.tsx","pages/SelectStationsPage/SelectStationsPage.tsx","App.tsx","index.tsx"],"names":["setCommonState","createEvent","$commonState","createStore","isComputerBusy","queueCount","calculatedCount","on","state","value","useCommonState","useStore","menuSelected","$selectedMenu","_","useSelectedSideMenu","mockData","callBackend","method","url","data","a","key","axios","then","resp","genericDateToRusDateTime","input","needSeconds","date","getDate","length","Date","convertToDate","datetime","toLocaleTimeString","year","month","day","split","join","substr","convertJsonStringToCsv","csvString","JSON","parse","map","x","ex","padZero","str","len","Array","slice","invertColor","hex","bw","indexOf","Error","r","parseInt","g","b","rS","toString","gS","bS","downloadDataFx","createEffect","linesPromise","getLinesFx","stationsPromise","getStationsFx","routesPromise","getRoutesFx","Promise","all","values","dataNormalized","lines","stations","routes","sample","clock","fn","linesById","forEach","i","id","stationsByStationId","stationsById","newStations","line","lineId","newStation","stationId","push","setLinesById","setStationsByStationId","setStationsById","newRoutes","newRoute","stationInstances","j","result","route","routeInstances","setLines","setStations","setRoutes","$stationsByStationId","filter","color","$lines","$stations","sort","created","createRouteFx","done","watch","message","success","pending","effects","$isCreateRouteIsBusy","$routes","params","status","useLines","useStations","useRoutes","ComputerBusyStatus","isBusy","cln","icon","HourglassOutlined","style","spin","CheckCircleFilled","indicator","LoadingOutlined","fontSize","className","float","textAlign","Header","Layout","HeaderContainer","Content","Footer","Sider","selectedSideMenu","title","position","zIndex","width","margin","paddingRight","xs","sm","md","lg","xl","height","SideBar","history","useHistory","location","useLocation","React","useEffect","pathname","selectWithKey","e","theme","breakpoint","collapsedWidth","onBreakpoint","broken","console","log","onCollapse","collapsed","type","boxShadow","marginTop","top","padding","background","mode","selectedKeys","defaultOpenKeys","Item","onClick","FileAddOutlined","size","count","offset","CalculatorOutlined","LayoutContainer","props","minHeight","children","HomePage","NoData","extra","CheckCircleOutlined","NodeIndexOutlined","MetroIcon","station","borderRadius","SourceRoute","Steps","Step","marginBottom","index","fontWeight","name","OptimizedRoute","LikeOutlined","direction","current","paddingLeft","description","Panel","Collapse","CalculatedPage","useState","setData","defaultActiveKey","routeId","calculated","header","label","solutionType","solverType","hamEnergy","filename","routeCsv","quboMatrixCsv","adjacencyMatrixCsv","QueuePage","SelectByTransfer","transferItems","setTransferItems","selected","setSelected","keys","setKeys","right","disabled","loading","minWidth","locale","notFoundContent","searchPlaceholder","itemUnit","itemsUnit","remove","listStyle","onSelectChange","newKeys","warning","reverse","showSelectAll","oneWay","dataSource","showSearch","filterOption","inputValue","option","toLowerCase","targetKeys","onChange","render","item","SelectStationsPage","App","listen","newLocation","path","exact","queryClient","QueryClient","defaultOptions","queries","notifyOnChangeProps","mutations","ReactDOM","client","document","getElementById"],"mappings":"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","file":"static/js/main.120ca3b1.chunk.js","sourcesContent":["import axios from 'axios';\nimport {\n  combine,\n  createApi,\n  createDomain,\n  createEffect,\n  createEvent,\n  createStore,\n  forward,\n  guard,\n  sample,\n  Store,\n} from 'effector';\nimport { useStore } from 'effector-react';\n\nexport type ICommonState = {\n  isComputerBusy: boolean,\n  queueCount: number,\n  calculatedCount: number\n}\n\nexport const setCommonState = createEvent<ICommonState>();\nexport const $commonState = createStore<ICommonState>({\n  isComputerBusy: null,\n  queueCount: 0,\n  calculatedCount: 0\n\n})\n\n$commonState.on(setCommonState, (state, value) => (value));\n\nexport const useCommonState = () => useStore($commonState)","import axios from 'axios';\nimport {\n  combine,\n  createApi,\n  createDomain,\n  createEffect,\n  createEvent,\n  createStore,\n  forward,\n  guard,\n  sample,\n  Store,\n} from 'effector';\nimport { useStore } from 'effector-react';\n\n\n\nexport const menuSelected = createEvent<string>();\nexport const $selectedMenu = createStore<string>('create')\n\n$selectedMenu.on(menuSelected, (_, value) => value);\n\nexport const useSelectedSideMenu = () => useStore($selectedMenu)","import axios from 'axios';\nimport { BACKEND_URL, MOCK_ENABLE } from 'src/config';\n\nimport { MOCK_LINES, MOCK_ROUTES, MOCK_STATIONS } from './mockData';\nimport { sleep } from './sleep';\n\nconst mockData = {\n  'GET/getLines': MOCK_LINES,\n  'GET/getStations': MOCK_STATIONS,\n  'POST/createRoute': [],\n  'GET/getRoutes': MOCK_ROUTES\n}\n\nexport const callBackend = async (method: \"GET\" | \"POST\", url: string, data?: any) => {\n\n  //console.log('callBackend', method, url, data)\n  if (MOCK_ENABLE) {\n    const key = `${method}${url}`;\n    console.log('callBackend mock', key)\n    await sleep(1000);\n    return mockData[key] || [];\n  }\n\n\n\n  return axios({\n    method,\n    url: `${BACKEND_URL}${url}`,\n    data\n  }).then(resp => resp.data)\n}","import { ILine } from 'src/store';\n\nexport const MOCK_LINES: ILine[] = [{ \"id\": \"line1\", \"name\": \"Сокольническая линия\", \"color\": \"e42518\" }, { \"id\": \"line2\", \"name\": \"Замоскворецкая линия\", \"color\": \"4baf4f\" }, { \"id\": \"line3\", \"name\": \"Арбатско-Покровская линия\", \"color\": \"0572b9\" }, { \"id\": \"line4\", \"name\": \"Филёвская линия\", \"color\": \"24bcee\" }, { \"id\": \"line5\", \"name\": \"Кольцевая линия\", \"isCircle\": true, \"color\": \"925233\" }, { \"id\": \"line6\", \"name\": \"Калужско-Рижская линия\", \"color\": \"ef7e24\" }, { \"id\": \"line7\", \"name\": \"Таганско-Краснопресненская линия\", \"color\": \"943f90\" }, { \"id\": \"line8\", \"name\": \"Калининская линия\", \"color\": \"FFCD1E\" }, { \"id\": \"line8A\", \"name\": \"Солнцевская линия\", \"color\": \"FFCD1E\" }, { \"id\": \"line9\", \"name\": \"Серпуховско-Тимирязевская линия\", \"color\": \"adacac\" }, { \"id\": \"line10\", \"name\": \"Люблинско-Дмитровская линия\", \"color\": \"BED12E\" }, { \"id\": \"line11\", \"name\": \"Большая Кольцевая линия\", \"color\": \"89CDCF\" }, { \"id\": \"line11A\", \"name\": \"Каховская линия\", \"color\": \"89CDCF\" }, { \"id\": \"line12\", \"name\": \"Бутовская линия\", \"color\": \"BAC8E8\" }, { \"id\": \"line13\", \"name\": \"Монорельс\", \"color\": \"0A72B9\" }, { \"id\": \"line14\", \"name\": \"МЦК\", \"isMCC\": true, \"color\": \"ffcec6\" }, { \"id\": \"line15\", \"name\": \"Некрасовская линия\", \"color\": \"d68ab1\" }, { \"id\": \"lineD1\", \"name\": \"МЦД-1\", \"color\": \"000000\" }, { \"id\": \"lineD2\", \"name\": \"МЦД-2\", \"color\": \"000000\" }]\n","import { IStation } from 'src/store';\n\nexport const MOCK_STATIONS: IStation[] = [\n  {\n    \"id\": 1,\n    \"stationId\": \"line1_1\",\n    \"name\": \"Бульвар Рокоссовского\",\n    \"lineId\": \"line1\",\n    \"top\": 312,\n    \"left\": 868\n  },\n  {\n    \"id\": 2,\n    \"stationId\": \"line1_2\",\n    \"name\": \"Черкизовская\",\n    \"lineId\": \"line1\",\n    \"top\": 340,\n    \"left\": 868\n  },\n  {\n    \"id\": 3,\n    \"stationId\": \"line1_3\",\n    \"name\": \"Преображенская площадь\",\n    \"lineId\": \"line1\",\n    \"top\": 369,\n    \"left\": 868\n  },\n  {\n    \"id\": 4,\n    \"stationId\": \"line1_4\",\n    \"name\": \"Сокольники\",\n    \"lineId\": \"line1\",\n    \"top\": 401,\n    \"left\": 868\n  },\n  {\n    \"id\": 5,\n    \"stationId\": \"line1_5\",\n    \"name\": \"Красносельская\",\n    \"lineId\": \"line1\",\n    \"top\": 426,\n    \"left\": 868\n  },\n  {\n    \"id\": 14,\n    \"stationId\": \"line1_14\",\n    \"name\": \"Фрунзенская\",\n    \"lineId\": \"line1\",\n    \"top\": 830,\n    \"left\": 393\n  },\n  {\n    \"id\": 15,\n    \"stationId\": \"line1_15\",\n    \"name\": \"Спортивная\",\n    \"lineId\": \"line1\",\n    \"top\": 857,\n    \"left\": 366\n  },\n  {\n    \"id\": 16,\n    \"stationId\": \"line1_16\",\n    \"name\": \"Воробьёвы горы\",\n    \"lineId\": \"line1\",\n    \"top\": 884,\n    \"left\": 339\n  },\n  {\n    \"id\": 17,\n    \"stationId\": \"line1_17\",\n    \"name\": \"Университет\",\n    \"lineId\": \"line1\",\n    \"top\": 910,\n    \"left\": 313\n  },\n  {\n    \"id\": 18,\n    \"stationId\": \"line1_18\",\n    \"name\": \"Проспект Вернадского\",\n    \"lineId\": \"line1\",\n    \"top\": 936,\n    \"left\": 287\n  },\n  {\n    \"id\": 19,\n    \"stationId\": \"line1_19\",\n    \"name\": \"Юго-Западная\",\n    \"lineId\": \"line1\",\n    \"top\": 964,\n    \"left\": 259\n  },\n  {\n    \"id\": 20,\n    \"stationId\": \"line1_20\",\n    \"name\": \"Тропарёво\",\n    \"lineId\": \"line1\",\n    \"top\": 992,\n    \"left\": 231\n  },\n  {\n    \"id\": 21,\n    \"stationId\": \"line1_21\",\n    \"name\": \"Румянцево\",\n    \"lineId\": \"line1\",\n    \"top\": 992,\n    \"left\": 231\n  },\n  {\n    \"id\": 22,\n    \"stationId\": \"line1_22\",\n    \"name\": \"Саларьево\",\n    \"lineId\": \"line1\",\n    \"top\": 992,\n    \"left\": 231\n  },\n  {\n    \"id\": 23,\n    \"stationId\": \"line1_23\",\n    \"name\": \"Филатов Луг\",\n    \"lineId\": \"line1\",\n    \"top\": 992,\n    \"left\": 231\n  },\n  {\n    \"id\": 24,\n    \"stationId\": \"line1_24\",\n    \"name\": \"Прокшино\",\n    \"lineId\": \"line1\",\n    \"top\": 992,\n    \"left\": 231\n  },\n  {\n    \"id\": 25,\n    \"stationId\": \"line1_25\",\n    \"name\": \"Ольховая\",\n    \"lineId\": \"line1\",\n    \"top\": 992,\n    \"left\": 231\n  },\n  {\n    \"id\": 26,\n    \"stationId\": \"line1_26\",\n    \"name\": \"Коммунарка\",\n    \"lineId\": \"line1\",\n    \"top\": 992,\n    \"left\": 231\n  },\n  {\n    \"id\": 27,\n    \"stationId\": \"line2_1\",\n    \"name\": \"Ховрино\",\n    \"lineId\": \"line2\",\n    \"top\": 254,\n    \"left\": 373\n  },\n  {\n    \"id\": 28,\n    \"stationId\": \"line2_2\",\n    \"name\": \"Беломорская\",\n    \"lineId\": \"line2\",\n    \"top\": 254,\n    \"left\": 373\n  },\n  {\n    \"id\": 29,\n    \"stationId\": \"line2_3\",\n    \"name\": \"Речной вокзал\",\n    \"lineId\": \"line2\",\n    \"top\": 254,\n    \"left\": 373\n  },\n  {\n    \"id\": 30,\n    \"stationId\": \"line2_4\",\n    \"name\": \"Водный стадион\",\n    \"lineId\": \"line2\",\n    \"top\": 282,\n    \"left\": 373\n  },\n  {\n    \"id\": 31,\n    \"stationId\": \"line2_5\",\n    \"name\": \"Войковская\",\n    \"lineId\": \"line2\",\n    \"top\": 311,\n    \"left\": 373\n  },\n  {\n    \"id\": 32,\n    \"stationId\": \"line2_6\",\n    \"name\": \"Сокол\",\n    \"lineId\": \"line2\",\n    \"top\": 339,\n    \"left\": 373\n  },\n  {\n    \"id\": 33,\n    \"stationId\": \"line2_7\",\n    \"name\": \"Аэропорт\",\n    \"lineId\": \"line2\",\n    \"top\": 368,\n    \"left\": 373\n  },\n  {\n    \"id\": 34,\n    \"stationId\": \"line2_8\",\n    \"name\": \"Динамо\",\n    \"lineId\": \"line2\",\n    \"top\": 446,\n    \"left\": 401\n  },\n  {\n    \"id\": 41,\n    \"stationId\": \"line2_15\",\n    \"name\": \"Автозаводская\",\n    \"lineId\": \"line2\",\n    \"top\": 945,\n    \"left\": 743\n  },\n  {\n    \"id\": 42,\n    \"stationId\": \"line2_16\",\n    \"name\": \"Технопарк\",\n    \"lineId\": \"line2\",\n    \"top\": 945,\n    \"left\": 743\n  },\n  {\n    \"id\": 43,\n    \"stationId\": \"line2_17\",\n    \"name\": \"Коломенская\",\n    \"lineId\": \"line2\",\n    \"top\": 973,\n    \"left\": 743\n  },\n  {\n    \"id\": 44,\n    \"stationId\": \"line2_18\",\n    \"name\": \"Каширская\",\n    \"lineId\": \"line2\",\n    \"top\": 1008,\n    \"left\": 743\n  },\n  {\n    \"id\": 45,\n    \"stationId\": \"line2_19\",\n    \"name\": \"Кантемировская\",\n    \"lineId\": \"line2\",\n    \"top\": 1059,\n    \"left\": 743\n  },\n  {\n    \"id\": 46,\n    \"stationId\": \"line2_20\",\n    \"name\": \"Царицыно\",\n    \"lineId\": \"line2\",\n    \"top\": 1088,\n    \"left\": 744\n  },\n  {\n    \"id\": 47,\n    \"stationId\": \"line2_21\",\n    \"name\": \"Орехово\",\n    \"lineId\": \"line2\",\n    \"top\": 1116,\n    \"left\": 744\n  },\n  {\n    \"id\": 48,\n    \"stationId\": \"line2_22\",\n    \"name\": \"Домодедовская\",\n    \"lineId\": \"line2\",\n    \"top\": 1159,\n    \"left\": 787\n  },\n  {\n    \"id\": 49,\n    \"stationId\": \"line2_23\",\n    \"name\": \"Красногвардейская\",\n    \"lineId\": \"line2\",\n    \"top\": 1159,\n    \"left\": 881\n  },\n  {\n    \"id\": 50,\n    \"stationId\": \"line2_24\",\n    \"name\": \"Алма-Атинская\",\n    \"lineId\": \"line2\",\n    \"top\": 1159,\n    \"left\": 881\n  },\n  {\n    \"id\": 51,\n    \"stationId\": \"line3_1\",\n    \"name\": \"Пятницкое шоссе\",\n    \"lineId\": \"line3\",\n    \"top\": 339,\n    \"left\": 127\n  },\n  {\n    \"id\": 52,\n    \"stationId\": \"line3_2\",\n    \"name\": \"Митино\",\n    \"lineId\": \"line3\",\n    \"top\": 339,\n    \"left\": 127\n  },\n  {\n    \"id\": 53,\n    \"stationId\": \"line3_3\",\n    \"name\": \"Волоколамская\",\n    \"lineId\": \"line3\",\n    \"top\": 368,\n    \"left\": 126\n  },\n  {\n    \"id\": 54,\n    \"stationId\": \"line3_4\",\n    \"name\": \"Мякинино\",\n    \"lineId\": \"line3\",\n    \"top\": 397,\n    \"left\": 126\n  },\n  {\n    \"id\": 55,\n    \"stationId\": \"line3_5\",\n    \"name\": \"Строгино\",\n    \"lineId\": \"line3\",\n    \"top\": 425,\n    \"left\": 126\n  },\n  {\n    \"id\": 56,\n    \"stationId\": \"line3_6\",\n    \"name\": \"Крылатское\",\n    \"lineId\": \"line3\",\n    \"top\": 453,\n    \"left\": 126\n  },\n  {\n    \"id\": 57,\n    \"stationId\": \"line3_7\",\n    \"name\": \"Молодёжная\",\n    \"lineId\": \"line3\",\n    \"top\": 482,\n    \"left\": 127\n  },\n  {\n    \"id\": 58,\n    \"stationId\": \"line3_8\",\n    \"name\": \"Кунцевская\",\n    \"lineId\": \"line3\",\n    \"top\": 511,\n    \"left\": 126,\n    \"close\": true\n  },\n  {\n    \"id\": 59,\n    \"stationId\": \"line3_9\",\n    \"name\": \"Славянский бульвар\",\n    \"lineId\": \"line3\",\n    \"top\": 722,\n    \"left\": 171,\n    \"close\": true\n  },\n  {\n    \"id\": 60,\n    \"stationId\": \"line3_10\",\n    \"name\": \"Парк Победы\",\n    \"lineId\": \"line3\",\n    \"top\": 722,\n    \"left\": 283\n  },\n  {\n    \"id\": 66,\n    \"stationId\": \"line3_16\",\n    \"name\": \"Бауманская\",\n    \"lineId\": \"line3\",\n    \"top\": 583,\n    \"left\": 912\n  },\n  {\n    \"id\": 67,\n    \"stationId\": \"line3_17\",\n    \"name\": \"Электрозаводская\",\n    \"lineId\": \"line3\",\n    \"top\": 556,\n    \"left\": 939\n  },\n  {\n    \"id\": 68,\n    \"stationId\": \"line3_18\",\n    \"name\": \"Семёновская\",\n    \"lineId\": \"line3\",\n    \"top\": 454,\n    \"left\": 991\n  },\n  {\n    \"id\": 69,\n    \"stationId\": \"line3_19\",\n    \"name\": \"Партизанская\",\n    \"lineId\": \"line3\",\n    \"top\": 425,\n    \"left\": 990\n  },\n  {\n    \"id\": 70,\n    \"stationId\": \"line3_20\",\n    \"name\": \"Измайловская\",\n    \"lineId\": \"line3\",\n    \"top\": 400,\n    \"left\": 991\n  },\n  {\n    \"id\": 71,\n    \"stationId\": \"line3_21\",\n    \"name\": \"Первомайская\",\n    \"lineId\": \"line3\",\n    \"top\": 368,\n    \"left\": 991\n  },\n  {\n    \"id\": 72,\n    \"stationId\": \"line3_22\",\n    \"name\": \"Щёлковская\",\n    \"lineId\": \"line3\",\n    \"top\": 340,\n    \"left\": 991\n  },\n  {\n    \"id\": 77,\n    \"stationId\": \"line4_7\",\n    \"name\": \"Студенческая\",\n    \"lineId\": \"line4\",\n    \"top\": 708,\n    \"left\": 306\n  },\n  {\n    \"id\": 78,\n    \"stationId\": \"line4_8\",\n    \"name\": \"Кутузовская\",\n    \"lineId\": \"line4\",\n    \"top\": 707,\n    \"left\": 217\n  },\n  {\n    \"id\": 79,\n    \"stationId\": \"line4_9\",\n    \"name\": \"Фили\",\n    \"lineId\": \"line4\",\n    \"top\": 639,\n    \"left\": 141\n  },\n  {\n    \"id\": 80,\n    \"stationId\": \"line4_10\",\n    \"name\": \"Багратионовская\",\n    \"lineId\": \"line4\",\n    \"top\": 610,\n    \"left\": 141\n  },\n  {\n    \"id\": 81,\n    \"stationId\": \"line4_11\",\n    \"name\": \"Филевский парк\",\n    \"lineId\": \"line4\",\n    \"top\": 582,\n    \"left\": 141\n  },\n  {\n    \"id\": 82,\n    \"stationId\": \"line4_12\",\n    \"name\": \"Пионерская\",\n    \"lineId\": \"line4\",\n    \"top\": 553,\n    \"left\": 141\n  },\n  {\n    \"id\": 83,\n    \"stationId\": \"line4_13\",\n    \"name\": \"Кунцевская\",\n    \"lineId\": \"line4\",\n    \"top\": 582,\n    \"left\": 141\n  },\n  {\n    \"id\": 84,\n    \"stationId\": \"line4_5\",\n    \"name\": \"Выставочная\",\n    \"lineId\": \"line4\",\n    \"top\": 658,\n    \"left\": 276\n  },\n  {\n    \"id\": 85,\n    \"stationId\": \"line4_6\",\n    \"name\": \"Международная\",\n    \"lineId\": \"line4\",\n    \"top\": 629,\n    \"left\": 276\n  },\n  {\n    \"id\": 98,\n    \"stationId\": \"line6_1\",\n    \"name\": \"Медведково\",\n    \"lineId\": \"line6\",\n    \"top\": 168,\n    \"left\": 744\n  },\n  {\n    \"id\": 99,\n    \"stationId\": \"line6_2\",\n    \"name\": \"Бабушкинская\",\n    \"lineId\": \"line6\",\n    \"top\": 196,\n    \"left\": 744\n  },\n  {\n    \"id\": 100,\n    \"stationId\": \"line6_3\",\n    \"name\": \"Свиблово\",\n    \"lineId\": \"line6\",\n    \"top\": 225,\n    \"left\": 744\n  },\n  {\n    \"id\": 101,\n    \"stationId\": \"line6_4\",\n    \"name\": \"Ботанический сад\",\n    \"lineId\": \"line6\",\n    \"top\": 254,\n    \"left\": 744\n  },\n  {\n    \"id\": 102,\n    \"stationId\": \"line6_5\",\n    \"name\": \"ВДНХ\",\n    \"lineId\": \"line6\",\n    \"top\": 282,\n    \"left\": 744\n  },\n  {\n    \"id\": 103,\n    \"stationId\": \"line6_6\",\n    \"name\": \"Алексеевская\",\n    \"lineId\": \"line6\",\n    \"top\": 311,\n    \"left\": 744\n  },\n  {\n    \"id\": 104,\n    \"stationId\": \"line6_7\",\n    \"name\": \"Рижская\",\n    \"lineId\": \"line6\",\n    \"top\": 339,\n    \"left\": 744\n  },\n  {\n    \"id\": 110,\n    \"stationId\": \"line6_13\",\n    \"name\": \"Октябрьская\",\n    \"lineId\": \"line6\",\n    \"top\": 878,\n    \"left\": 495\n  },\n  {\n    \"id\": 111,\n    \"stationId\": \"line6_14\",\n    \"name\": \"Шаболовская\",\n    \"lineId\": \"line6\",\n    \"top\": 916,\n    \"left\": 466\n  },\n  {\n    \"id\": 112,\n    \"stationId\": \"line6_15\",\n    \"name\": \"Ленинский проспект\",\n    \"lineId\": \"line6\",\n    \"top\": 945,\n    \"left\": 465\n  },\n  {\n    \"id\": 113,\n    \"stationId\": \"line6_16\",\n    \"name\": \"Академическая\",\n    \"lineId\": \"line6\",\n    \"top\": 973,\n    \"left\": 466\n  },\n  {\n    \"id\": 114,\n    \"stationId\": \"line6_17\",\n    \"name\": \"Профсоюзная\",\n    \"lineId\": \"line6\",\n    \"top\": 1002,\n    \"left\": 466\n  },\n  {\n    \"id\": 115,\n    \"stationId\": \"line6_18\",\n    \"name\": \"Новые Черёмушки\",\n    \"lineId\": \"line6\",\n    \"top\": 1031,\n    \"left\": 466\n  },\n  {\n    \"id\": 116,\n    \"stationId\": \"line6_19\",\n    \"name\": \"Калужская\",\n    \"lineId\": \"line6\",\n    \"top\": 1059,\n    \"left\": 465\n  },\n  {\n    \"id\": 117,\n    \"stationId\": \"line6_20\",\n    \"name\": \"Беляево\",\n    \"lineId\": \"line6\",\n    \"top\": 1088,\n    \"left\": 465\n  },\n  {\n    \"id\": 118,\n    \"stationId\": \"line6_21\",\n    \"name\": \"Коньково\",\n    \"lineId\": \"line6\",\n    \"top\": 1116,\n    \"left\": 466\n  },\n  {\n    \"id\": 119,\n    \"stationId\": \"line6_22\",\n    \"name\": \"Тёплый стан\",\n    \"lineId\": \"line6\",\n    \"top\": 1145,\n    \"left\": 466\n  },\n  {\n    \"id\": 120,\n    \"stationId\": \"line6_23\",\n    \"name\": \"Ясенево\",\n    \"lineId\": \"line6\",\n    \"top\": 1173,\n    \"left\": 466\n  },\n  {\n    \"id\": 121,\n    \"stationId\": \"line6_24\",\n    \"name\": \"Новоясеневская\",\n    \"lineId\": \"line6\",\n    \"top\": 1216,\n    \"left\": 449\n  },\n  {\n    \"id\": 122,\n    \"stationId\": \"line7_1\",\n    \"name\": \"Планерная\",\n    \"lineId\": \"line7\",\n    \"top\": 282,\n    \"left\": 249\n  },\n  {\n    \"id\": 123,\n    \"stationId\": \"line7_2\",\n    \"name\": \"Сходненская\",\n    \"lineId\": \"line7\",\n    \"top\": 311,\n    \"left\": 250\n  },\n  {\n    \"id\": 124,\n    \"stationId\": \"line7_3\",\n    \"name\": \"Тушинская\",\n    \"lineId\": \"line7\",\n    \"top\": 340,\n    \"left\": 250\n  },\n  {\n    \"id\": 125,\n    \"stationId\": \"line7_4\",\n    \"name\": \"Спартак\",\n    \"lineId\": \"line7\",\n    \"top\": 340,\n    \"left\": 250\n  },\n  {\n    \"id\": 126,\n    \"stationId\": \"line7_5\",\n    \"name\": \"Щукинская\",\n    \"lineId\": \"line7\",\n    \"top\": 396,\n    \"left\": 250\n  },\n  {\n    \"id\": 127,\n    \"stationId\": \"line7_6\",\n    \"name\": \"Октябрьское поле\",\n    \"lineId\": \"line7\",\n    \"top\": 425,\n    \"left\": 250\n  },\n  {\n    \"id\": 128,\n    \"stationId\": \"line7_7\",\n    \"name\": \"Полежаевская\",\n    \"lineId\": \"line7\",\n    \"top\": 501,\n    \"left\": 292\n  },\n  {\n    \"id\": 129,\n    \"stationId\": \"line7_8\",\n    \"name\": \"Беговая\",\n    \"lineId\": \"line7\",\n    \"top\": 526,\n    \"left\": 318\n  },\n  {\n    \"id\": 130,\n    \"stationId\": \"line7_9\",\n    \"name\": \"Улица 1905 года\",\n    \"lineId\": \"line7\",\n    \"top\": 552,\n    \"left\": 346\n  },\n  {\n    \"id\": 136,\n    \"stationId\": \"line7_15\",\n    \"name\": \"Пролетарская\",\n    \"lineId\": \"line7\",\n    \"top\": 824,\n    \"left\": 942\n  },\n  {\n    \"id\": 137,\n    \"stationId\": \"line7_16\",\n    \"name\": \"Волгоградский проспект\",\n    \"lineId\": \"line7\",\n    \"top\": 888,\n    \"left\": 991\n  },\n  {\n    \"id\": 138,\n    \"stationId\": \"line7_17\",\n    \"name\": \"Текстильщики\",\n    \"lineId\": \"line7\",\n    \"top\": 917,\n    \"left\": 991\n  },\n  {\n    \"id\": 139,\n    \"stationId\": \"line7_18\",\n    \"name\": \"Кузьминки\",\n    \"lineId\": \"line7\",\n    \"top\": 945,\n    \"left\": 991\n  },\n  {\n    \"id\": 140,\n    \"stationId\": \"line7_19\",\n    \"name\": \"Рязанский проспект\",\n    \"lineId\": \"line7\",\n    \"top\": 974,\n    \"left\": 990\n  },\n  {\n    \"id\": 141,\n    \"stationId\": \"line7_20\",\n    \"name\": \"Выхино\",\n    \"lineId\": \"line7\",\n    \"top\": 1002,\n    \"left\": 991\n  },\n  {\n    \"id\": 142,\n    \"stationId\": \"line7_21\",\n    \"name\": \"Лермонтовский проспект\",\n    \"lineId\": \"line7\",\n    \"top\": 1002,\n    \"left\": 991\n  },\n  {\n    \"id\": 143,\n    \"stationId\": \"line7_22\",\n    \"name\": \"Жулебино\",\n    \"lineId\": \"line7\",\n    \"top\": 1002,\n    \"left\": 991\n  },\n  {\n    \"id\": 144,\n    \"stationId\": \"line7_23\",\n    \"name\": \"Котельники\",\n    \"lineId\": \"line7\",\n    \"top\": 1072,\n    \"left\": 991\n  },\n  {\n    \"id\": 145,\n    \"stationId\": \"line8_1\",\n    \"name\": \"Новокосино\",\n    \"lineId\": \"line8\",\n    \"top\": 583,\n    \"left\": 1059\n  },\n  {\n    \"id\": 146,\n    \"stationId\": \"line8_2\",\n    \"name\": \"Новогиреево\",\n    \"lineId\": \"line8\",\n    \"top\": 583,\n    \"left\": 1059\n  },\n  {\n    \"id\": 147,\n    \"stationId\": \"line8_3\",\n    \"name\": \"Перово\",\n    \"lineId\": \"line8\",\n    \"top\": 609,\n    \"left\": 1032\n  },\n  {\n    \"id\": 148,\n    \"stationId\": \"line8_4\",\n    \"name\": \"Шоссе Энтузиастов\",\n    \"lineId\": \"line8\",\n    \"top\": 637,\n    \"left\": 1005\n  },\n  {\n    \"id\": 149,\n    \"stationId\": \"line8_5\",\n    \"name\": \"Авиамоторная\",\n    \"lineId\": \"line8\",\n    \"top\": 664,\n    \"left\": 978\n  },\n  {\n    \"id\": 150,\n    \"stationId\": \"line8_6\",\n    \"name\": \"Площадь Ильича\",\n    \"lineId\": \"line8\",\n    \"top\": 715,\n    \"left\": 927\n  },\n  {\n    \"id\": 153,\n    \"stationId\": \"line8A_5\",\n    \"name\": \"Деловой центр\",\n    \"lineId\": \"line8A\",\n    \"top\": 460,\n    \"left\": 420\n  },\n  {\n    \"id\": 154,\n    \"stationId\": \"line8A_6\",\n    \"name\": \"Парк Победы\",\n    \"lineId\": \"line8A\",\n    \"top\": 789,\n    \"left\": 744\n  },\n  {\n    \"id\": 155,\n    \"stationId\": \"line8A_7\",\n    \"name\": \"Минская\",\n    \"lineId\": \"line8A\",\n    \"top\": 789,\n    \"left\": 744\n  },\n  {\n    \"id\": 156,\n    \"stationId\": \"line8A_8\",\n    \"name\": \"Ломоносовский проспект\",\n    \"lineId\": \"line8A\",\n    \"top\": 789,\n    \"left\": 744\n  },\n  {\n    \"id\": 157,\n    \"stationId\": \"line8A_9\",\n    \"name\": \"Раменки\",\n    \"lineId\": \"line8A\",\n    \"top\": 789,\n    \"left\": 744\n  },\n  {\n    \"id\": 158,\n    \"stationId\": \"line8A_10\",\n    \"name\": \"Мичуринский проспект\",\n    \"lineId\": \"line8A\",\n    \"top\": 789,\n    \"left\": 744\n  },\n  {\n    \"id\": 159,\n    \"stationId\": \"line8A_11\",\n    \"name\": \"Озёрная\",\n    \"lineId\": \"line8A\",\n    \"top\": 789,\n    \"left\": 744\n  },\n  {\n    \"id\": 160,\n    \"stationId\": \"line8A_12\",\n    \"name\": \"Говорово\",\n    \"lineId\": \"line8A\",\n    \"top\": 789,\n    \"left\": 744\n  },\n  {\n    \"id\": 161,\n    \"stationId\": \"line8A_13\",\n    \"name\": \"Солнцево\",\n    \"lineId\": \"line8A\",\n    \"top\": 789,\n    \"left\": 744\n  },\n  {\n    \"id\": 162,\n    \"stationId\": \"line8A_14\",\n    \"name\": \"Боровское шоссе\",\n    \"lineId\": \"line8A\",\n    \"top\": 789,\n    \"left\": 744\n  },\n  {\n    \"id\": 163,\n    \"stationId\": \"line8A_15\",\n    \"name\": \"Новопеределкино\",\n    \"lineId\": \"line8A\",\n    \"top\": 789,\n    \"left\": 744\n  },\n  {\n    \"id\": 164,\n    \"stationId\": \"line8A_16\",\n    \"name\": \"Рассказовка\",\n    \"lineId\": \"line8A\",\n    \"top\": 789,\n    \"left\": 744\n  },\n  {\n    \"id\": 165,\n    \"stationId\": \"line9_1\",\n    \"name\": \"Алтуфьево\",\n    \"lineId\": \"line9\",\n    \"top\": 140,\n    \"left\": 496\n  },\n  {\n    \"id\": 166,\n    \"stationId\": \"line9_2\",\n    \"name\": \"Бибирево\",\n    \"lineId\": \"line9\",\n    \"top\": 168,\n    \"left\": 496\n  },\n  {\n    \"id\": 167,\n    \"stationId\": \"line9_3\",\n    \"name\": \"Отрадное\",\n    \"lineId\": \"line9\",\n    \"top\": 197,\n    \"left\": 497\n  },\n  {\n    \"id\": 168,\n    \"stationId\": \"line9_4\",\n    \"name\": \"Владыкино\",\n    \"lineId\": \"line9\",\n    \"top\": 225,\n    \"left\": 497\n  },\n  {\n    \"id\": 169,\n    \"stationId\": \"line9_5\",\n    \"name\": \"Петровско-Разумовская\",\n    \"lineId\": \"line9\",\n    \"top\": 253,\n    \"left\": 497\n  },\n  {\n    \"id\": 170,\n    \"stationId\": \"line9_6\",\n    \"name\": \"Тимирязевская\",\n    \"lineId\": \"line9\",\n    \"top\": 282,\n    \"left\": 496\n  },\n  {\n    \"id\": 171,\n    \"stationId\": \"line9_7\",\n    \"name\": \"Дмитровская\",\n    \"lineId\": \"line9\",\n    \"top\": 310,\n    \"left\": 496\n  },\n  {\n    \"id\": 172,\n    \"stationId\": \"line9_8\",\n    \"name\": \"Савёловская\",\n    \"lineId\": \"line9\",\n    \"top\": 339,\n    \"left\": 497\n  },\n  {\n    \"id\": 179,\n    \"stationId\": \"line9_15\",\n    \"name\": \"Тульская\",\n    \"lineId\": \"line9\",\n    \"top\": 945,\n    \"left\": 589\n  },\n  {\n    \"id\": 180,\n    \"stationId\": \"line9_16\",\n    \"name\": \"Нагатинская\",\n    \"lineId\": \"line9\",\n    \"top\": 973,\n    \"left\": 589\n  },\n  {\n    \"id\": 181,\n    \"stationId\": \"line9_17\",\n    \"name\": \"Нагорная\",\n    \"lineId\": \"line9\",\n    \"top\": 1002,\n    \"left\": 589\n  },\n  {\n    \"id\": 182,\n    \"stationId\": \"line9_18\",\n    \"name\": \"Нахимовский проспект\",\n    \"lineId\": \"line9\",\n    \"top\": 1030,\n    \"left\": 589\n  },\n  {\n    \"id\": 183,\n    \"stationId\": \"line9_19\",\n    \"name\": \"Севастопольская\",\n    \"lineId\": \"line9\",\n    \"top\": 1082,\n    \"left\": 589\n  },\n  {\n    \"id\": 184,\n    \"stationId\": \"line9_20\",\n    \"name\": \"Чертановская\",\n    \"lineId\": \"line9\",\n    \"top\": 1116,\n    \"left\": 589\n  },\n  {\n    \"id\": 185,\n    \"stationId\": \"line9_21\",\n    \"name\": \"Южная\",\n    \"lineId\": \"line9\",\n    \"top\": 1145,\n    \"left\": 589\n  },\n  {\n    \"id\": 186,\n    \"stationId\": \"line9_22\",\n    \"name\": \"Пражская\",\n    \"lineId\": \"line9\",\n    \"top\": 1173,\n    \"left\": 589\n  },\n  {\n    \"id\": 187,\n    \"stationId\": \"line9_23\",\n    \"name\": \"Улица академика Янгеля\",\n    \"lineId\": \"line9\",\n    \"top\": 1202,\n    \"left\": 589\n  },\n  {\n    \"id\": 188,\n    \"stationId\": \"line9_24\",\n    \"name\": \"Аннино\",\n    \"lineId\": \"line9\",\n    \"top\": 1230,\n    \"left\": 589\n  },\n  {\n    \"id\": 189,\n    \"stationId\": \"line9_25\",\n    \"name\": \"Бульвар Дмитрия Донского\",\n    \"lineId\": \"line9\",\n    \"top\": 1259,\n    \"left\": 590\n  },\n  {\n    \"id\": 190,\n    \"stationId\": \"line10_1\",\n    \"name\": \"Селигерская\",\n    \"lineId\": \"line10\",\n    \"top\": 1059,\n    \"left\": 867\n  },\n  {\n    \"id\": 191,\n    \"stationId\": \"line10_2\",\n    \"name\": \"Верхние Лихоборы\",\n    \"lineId\": \"line10\",\n    \"top\": 1059,\n    \"left\": 867\n  },\n  {\n    \"id\": 192,\n    \"stationId\": \"line10_3\",\n    \"name\": \"Окружная\",\n    \"lineId\": \"line10\",\n    \"top\": 1059,\n    \"left\": 867\n  },\n  {\n    \"id\": 193,\n    \"stationId\": \"line10_4\",\n    \"name\": \"Петровско-Разумовская\",\n    \"lineId\": \"line10\",\n    \"top\": 1059,\n    \"left\": 867\n  },\n  {\n    \"id\": 194,\n    \"stationId\": \"line10_5\",\n    \"name\": \"Фонвизинская\",\n    \"lineId\": \"line10\",\n    \"top\": 1059,\n    \"left\": 867\n  },\n  {\n    \"id\": 195,\n    \"stationId\": \"line10_6\",\n    \"name\": \"Бутырская\",\n    \"lineId\": \"line10\",\n    \"top\": 1059,\n    \"left\": 867\n  },\n  {\n    \"id\": 196,\n    \"stationId\": \"line10_7\",\n    \"name\": \"Марьина роща\",\n    \"lineId\": \"line10\",\n    \"top\": 339,\n    \"left\": 620\n  },\n  {\n    \"id\": 201,\n    \"stationId\": \"line10_12\",\n    \"name\": \"Римская\",\n    \"lineId\": \"line10\",\n    \"top\": 715,\n    \"left\": 947\n  },\n  {\n    \"id\": 202,\n    \"stationId\": \"line10_13\",\n    \"name\": \"Крестьянская застава\",\n    \"lineId\": \"line10\",\n    \"top\": 809,\n    \"left\": 956\n  },\n  {\n    \"id\": 203,\n    \"stationId\": \"line10_14\",\n    \"name\": \"Дубровка\",\n    \"lineId\": \"line10\",\n    \"top\": 854,\n    \"left\": 911\n  },\n  {\n    \"id\": 204,\n    \"stationId\": \"line10_15\",\n    \"name\": \"Кожуховская\",\n    \"lineId\": \"line10\",\n    \"top\": 881,\n    \"left\": 884\n  },\n  {\n    \"id\": 205,\n    \"stationId\": \"line10_16\",\n    \"name\": \"Печатники\",\n    \"lineId\": \"line10\",\n    \"top\": 945,\n    \"left\": 867\n  },\n  {\n    \"id\": 206,\n    \"stationId\": \"line10_17\",\n    \"name\": \"Волжская\",\n    \"lineId\": \"line10\",\n    \"top\": 973,\n    \"left\": 867\n  },\n  {\n    \"id\": 207,\n    \"stationId\": \"line10_18\",\n    \"name\": \"Люблино\",\n    \"lineId\": \"line10\",\n    \"top\": 1002,\n    \"left\": 867\n  },\n  {\n    \"id\": 208,\n    \"stationId\": \"line10_19\",\n    \"name\": \"Братиславская\",\n    \"lineId\": \"line10\",\n    \"top\": 1030,\n    \"left\": 867\n  },\n  {\n    \"id\": 209,\n    \"stationId\": \"line10_20\",\n    \"name\": \"Марьино\",\n    \"lineId\": \"line10\",\n    \"top\": 1059,\n    \"left\": 867\n  },\n  {\n    \"id\": 210,\n    \"stationId\": \"line10_21\",\n    \"name\": \"Борисово\",\n    \"lineId\": \"line10\",\n    \"top\": 1059,\n    \"left\": 867\n  },\n  {\n    \"id\": 211,\n    \"stationId\": \"line10_22\",\n    \"name\": \"Шипиловская\",\n    \"lineId\": \"line10\",\n    \"top\": 1059,\n    \"left\": 867\n  },\n  {\n    \"id\": 212,\n    \"stationId\": \"line10_23\",\n    \"name\": \"Зябликово\",\n    \"lineId\": \"line10\",\n    \"top\": 1059,\n    \"left\": 867\n  },\n  {\n    \"id\": 213,\n    \"stationId\": \"line11_1\",\n    \"name\": \"Савёловская\",\n    \"lineId\": \"line11\",\n    \"top\": 1059,\n    \"left\": 867\n  },\n  {\n    \"id\": 214,\n    \"stationId\": \"line11_2\",\n    \"name\": \"Петровский парк\",\n    \"lineId\": \"line11\",\n    \"top\": 1059,\n    \"left\": 867\n  },\n  {\n    \"id\": 215,\n    \"stationId\": \"line11_3\",\n    \"name\": \"ЦСКА\",\n    \"lineId\": \"line11\",\n    \"top\": 1059,\n    \"left\": 867\n  },\n  {\n    \"id\": 216,\n    \"stationId\": \"line11_4\",\n    \"name\": \"Хорошёвская\",\n    \"lineId\": \"line11\",\n    \"top\": 1059,\n    \"left\": 867\n  },\n  {\n    \"id\": 217,\n    \"stationId\": \"line11_5\",\n    \"name\": \"Шелепиха\",\n    \"lineId\": \"line11\",\n    \"top\": 1059,\n    \"left\": 867\n  },\n  {\n    \"id\": 218,\n    \"stationId\": \"line11_6\",\n    \"name\": \"Деловой центр\",\n    \"lineId\": \"line11\",\n    \"top\": 1059,\n    \"left\": 867\n  },\n  {\n    \"id\": 219,\n    \"stationId\": \"line11_7\",\n    \"name\": \"Народное Ополчение\",\n    \"lineId\": \"line11\",\n    \"top\": 339,\n    \"left\": 620\n  },\n  {\n    \"id\": 220,\n    \"stationId\": \"line11_8\",\n    \"name\": \"Мнёвники\",\n    \"lineId\": \"line11\",\n    \"top\": 368,\n    \"left\": 620\n  },\n  {\n    \"id\": 221,\n    \"stationId\": \"line11A_1\",\n    \"name\": \"Каширская\",\n    \"lineId\": \"line11A\",\n    \"top\": 1059,\n    \"left\": 867\n  },\n  {\n    \"id\": 222,\n    \"stationId\": \"line11A_2\",\n    \"name\": \"Варшавская\",\n    \"lineId\": \"line11A\",\n    \"top\": 1030,\n    \"left\": 867\n  },\n  {\n    \"id\": 223,\n    \"stationId\": \"line12_1\",\n    \"name\": \"Битцевский парк\",\n    \"lineId\": \"line12\",\n    \"top\": 1273,\n    \"left\": 575\n  },\n  {\n    \"id\": 224,\n    \"stationId\": \"line12_2\",\n    \"name\": \"Лесопарковая\",\n    \"lineId\": \"line12\",\n    \"top\": 1273,\n    \"left\": 575\n  },\n  {\n    \"id\": 225,\n    \"stationId\": \"line12_3\",\n    \"name\": \"Улица Старокачаловская\",\n    \"lineId\": \"line12\",\n    \"top\": 1273,\n    \"left\": 575\n  },\n  {\n    \"id\": 226,\n    \"stationId\": \"line12_4\",\n    \"name\": \"Улица Скобелевская\",\n    \"lineId\": \"line12\",\n    \"top\": 1330,\n    \"left\": 489\n  },\n  {\n    \"id\": 227,\n    \"stationId\": \"line12_5\",\n    \"name\": \"Бульвар адмирала Ушакова\",\n    \"lineId\": \"line12\",\n    \"top\": 1330,\n    \"left\": 430\n  },\n  {\n    \"id\": 228,\n    \"stationId\": \"line12_6\",\n    \"name\": \"Улица Горчакова\",\n    \"lineId\": \"line12\",\n    \"top\": 1330,\n    \"left\": 375\n  },\n  {\n    \"id\": 229,\n    \"stationId\": \"line12_7\",\n    \"name\": \"Бунинская аллея\",\n    \"lineId\": \"line12\",\n    \"top\": 1330,\n    \"left\": 318\n  },\n  {\n    \"id\": 230,\n    \"stationId\": \"line13_1\",\n    \"name\": \"Ул. Сергея Эйзенштейна\",\n    \"lineId\": \"line13\",\n    \"top\": 1330,\n    \"left\": 375\n  },\n  {\n    \"id\": 231,\n    \"stationId\": \"line13_2\",\n    \"name\": \"Выставочный центр\",\n    \"lineId\": \"line13\",\n    \"top\": 1330,\n    \"left\": 430\n  },\n  {\n    \"id\": 232,\n    \"stationId\": \"line13_3\",\n    \"name\": \"Ул. Академика Королева\",\n    \"lineId\": \"line13\",\n    \"top\": 1330,\n    \"left\": 489\n  },\n  {\n    \"id\": 233,\n    \"stationId\": \"line13_4\",\n    \"name\": \"Телецентр\",\n    \"lineId\": \"line13\",\n    \"top\": 1273,\n    \"left\": 575\n  },\n  {\n    \"id\": 234,\n    \"stationId\": \"line13_5\",\n    \"name\": \"Ул. Милашенкова\",\n    \"lineId\": \"line13\",\n    \"top\": 1273,\n    \"left\": 575\n  },\n  {\n    \"id\": 235,\n    \"stationId\": \"line13_6\",\n    \"name\": \"Тимирязевская\",\n    \"lineId\": \"line13\",\n    \"top\": 1273,\n    \"left\": 575\n  },\n  {\n    \"id\": 236,\n    \"stationId\": \"line14_1\",\n    \"name\": \"Бульвар Рокоссовского\",\n    \"lineId\": \"line14\",\n    \"top\": 1273,\n    \"left\": 575\n  },\n  {\n    \"id\": 237,\n    \"stationId\": \"line14_2\",\n    \"name\": \"Локомотив\",\n    \"lineId\": \"line14\",\n    \"top\": 1273,\n    \"left\": 575\n  },\n  {\n    \"id\": 238,\n    \"stationId\": \"line14_3\",\n    \"name\": \"Измайлово\",\n    \"lineId\": \"line14\",\n    \"top\": 1273,\n    \"left\": 575\n  },\n  {\n    \"id\": 239,\n    \"stationId\": \"line14_4\",\n    \"name\": \"Соколиная Гора\",\n    \"lineId\": \"line14\",\n    \"top\": 1273,\n    \"left\": 575\n  },\n  {\n    \"id\": 240,\n    \"stationId\": \"line14_5\",\n    \"name\": \"Шоссе Энтузиастов\",\n    \"lineId\": \"line14\",\n    \"top\": 1273,\n    \"left\": 575\n  },\n  {\n    \"id\": 241,\n    \"stationId\": \"line14_6\",\n    \"name\": \"Андроновка\",\n    \"lineId\": \"line14\",\n    \"top\": 1273,\n    \"left\": 575\n  },\n  {\n    \"id\": 242,\n    \"stationId\": \"line14_7\",\n    \"name\": \"Нижегородская\",\n    \"lineId\": \"line14\",\n    \"top\": 1273,\n    \"left\": 575\n  },\n  {\n    \"id\": 243,\n    \"stationId\": \"line14_8\",\n    \"name\": \"Новохохловская\",\n    \"lineId\": \"line14\",\n    \"top\": 1273,\n    \"left\": 575\n  },\n  {\n    \"id\": 244,\n    \"stationId\": \"line14_9\",\n    \"name\": \"Угрешская\",\n    \"lineId\": \"line14\",\n    \"top\": 1273,\n    \"left\": 575\n  },\n  {\n    \"id\": 245,\n    \"stationId\": \"line14_10\",\n    \"name\": \"Дубровка\",\n    \"lineId\": \"line14\",\n    \"top\": 1273,\n    \"left\": 575\n  },\n  {\n    \"id\": 246,\n    \"stationId\": \"line14_11\",\n    \"name\": \"Автозаводская\",\n    \"lineId\": \"line14\",\n    \"top\": 1273,\n    \"left\": 575\n  },\n  {\n    \"id\": 247,\n    \"stationId\": \"line14_12\",\n    \"name\": \"ЗИЛ\",\n    \"lineId\": \"line14\",\n    \"top\": 1273,\n    \"left\": 575\n  },\n  {\n    \"id\": 248,\n    \"stationId\": \"line14_13\",\n    \"name\": \"Верхние Котлы\",\n    \"lineId\": \"line14\",\n    \"top\": 1273,\n    \"left\": 575\n  },\n  {\n    \"id\": 249,\n    \"stationId\": \"line14_14\",\n    \"name\": \"Крымская\",\n    \"lineId\": \"line14\",\n    \"top\": 1273,\n    \"left\": 575\n  },\n  {\n    \"id\": 250,\n    \"stationId\": \"line14_15\",\n    \"name\": \"Площадь Гагарина\",\n    \"lineId\": \"line14\",\n    \"top\": 1273,\n    \"left\": 575\n  },\n  {\n    \"id\": 251,\n    \"stationId\": \"line14_16\",\n    \"name\": \"Лужники\",\n    \"lineId\": \"line14\",\n    \"top\": 1273,\n    \"left\": 575\n  },\n  {\n    \"id\": 252,\n    \"stationId\": \"line14_17\",\n    \"name\": \"Кутузовская\",\n    \"lineId\": \"line14\",\n    \"top\": 1273,\n    \"left\": 575\n  },\n  {\n    \"id\": 253,\n    \"stationId\": \"line14_18\",\n    \"name\": \"Деловой центр\",\n    \"lineId\": \"line14\",\n    \"top\": 1273,\n    \"left\": 575\n  },\n  {\n    \"id\": 254,\n    \"stationId\": \"line14_19\",\n    \"name\": \"Шелепиха\",\n    \"lineId\": \"line14\",\n    \"top\": 1273,\n    \"left\": 575\n  },\n  {\n    \"id\": 255,\n    \"stationId\": \"line14_20\",\n    \"name\": \"Хорошево\",\n    \"lineId\": \"line14\",\n    \"top\": 1273,\n    \"left\": 575\n  },\n  {\n    \"id\": 256,\n    \"stationId\": \"line14_21\",\n    \"name\": \"Зорге\",\n    \"lineId\": \"line14\",\n    \"top\": 1273,\n    \"left\": 575\n  },\n  {\n    \"id\": 257,\n    \"stationId\": \"line14_22\",\n    \"name\": \"Панфиловская\",\n    \"lineId\": \"line14\",\n    \"top\": 1273,\n    \"left\": 575\n  },\n  {\n    \"id\": 258,\n    \"stationId\": \"line14_23\",\n    \"name\": \"Стрешнево\",\n    \"lineId\": \"line14\",\n    \"top\": 1273,\n    \"left\": 575\n  },\n  {\n    \"id\": 259,\n    \"stationId\": \"line14_24\",\n    \"name\": \"Балтийская\",\n    \"lineId\": \"line14\",\n    \"top\": 1273,\n    \"left\": 575\n  },\n  {\n    \"id\": 260,\n    \"stationId\": \"line14_25\",\n    \"name\": \"Коптево\",\n    \"lineId\": \"line14\",\n    \"top\": 1273,\n    \"left\": 575\n  },\n  {\n    \"id\": 261,\n    \"stationId\": \"line14_26\",\n    \"name\": \"Лихоборы\",\n    \"lineId\": \"line14\",\n    \"top\": 1273,\n    \"left\": 575\n  },\n  {\n    \"id\": 262,\n    \"stationId\": \"line14_27\",\n    \"name\": \"Окружная\",\n    \"lineId\": \"line14\",\n    \"top\": 1273,\n    \"left\": 575\n  },\n  {\n    \"id\": 263,\n    \"stationId\": \"line14_28\",\n    \"name\": \"Владыкино\",\n    \"lineId\": \"line14\",\n    \"top\": 1273,\n    \"left\": 575\n  },\n  {\n    \"id\": 264,\n    \"stationId\": \"line14_29\",\n    \"name\": \"Ботанический сад\",\n    \"lineId\": \"line14\",\n    \"top\": 1273,\n    \"left\": 575\n  },\n  {\n    \"id\": 265,\n    \"stationId\": \"line14_30\",\n    \"name\": \"Ростокино\",\n    \"lineId\": \"line14\",\n    \"top\": 1273,\n    \"left\": 575\n  },\n  {\n    \"id\": 266,\n    \"stationId\": \"line14_31\",\n    \"name\": \"Белокаменная\",\n    \"lineId\": \"line14\",\n    \"top\": 1273,\n    \"left\": 575\n  },\n  {\n    \"id\": 267,\n    \"stationId\": \"line15_0\",\n    \"name\": \"Электрозаводская\",\n    \"lineId\": \"line15\",\n    \"top\": 1273,\n    \"left\": 575\n  },\n  {\n    \"id\": 268,\n    \"stationId\": \"line15_1\",\n    \"name\": \"Лефортово\",\n    \"lineId\": \"line15\",\n    \"top\": 1273,\n    \"left\": 575\n  },\n  {\n    \"id\": 269,\n    \"stationId\": \"line15_2\",\n    \"name\": \"Авиамоторная\",\n    \"lineId\": \"line15\",\n    \"top\": 1273,\n    \"left\": 575\n  },\n  {\n    \"id\": 270,\n    \"stationId\": \"line15_3\",\n    \"name\": \"Нижегородская\",\n    \"lineId\": \"line15\",\n    \"top\": 1273,\n    \"left\": 575\n  },\n  {\n    \"id\": 271,\n    \"stationId\": \"line15_4\",\n    \"name\": \"Стахановская\",\n    \"lineId\": \"line15\",\n    \"top\": 1273,\n    \"left\": 575\n  },\n  {\n    \"id\": 272,\n    \"stationId\": \"line15_5\",\n    \"name\": \"Окская\",\n    \"lineId\": \"line15\",\n    \"top\": 1330,\n    \"left\": 489\n  },\n  {\n    \"id\": 273,\n    \"stationId\": \"line15_6\",\n    \"name\": \"Юго-Восточная\",\n    \"lineId\": \"line15\",\n    \"top\": 1330,\n    \"left\": 489\n  },\n  {\n    \"id\": 274,\n    \"stationId\": \"line15_7\",\n    \"name\": \"Косино\",\n    \"lineId\": \"line15\",\n    \"top\": 1273,\n    \"left\": 575\n  },\n  {\n    \"id\": 275,\n    \"stationId\": \"line15_8\",\n    \"name\": \"Улица Дмитриевского\",\n    \"lineId\": \"line15\",\n    \"top\": 1273,\n    \"left\": 575\n  },\n  {\n    \"id\": 276,\n    \"stationId\": \"line15_9\",\n    \"name\": \"Лухмановская\",\n    \"lineId\": \"line15\",\n    \"top\": 1273,\n    \"left\": 575\n  },\n  {\n    \"id\": 277,\n    \"stationId\": \"line15_10\",\n    \"name\": \"Некрасовка\",\n    \"lineId\": \"line15\",\n    \"top\": 1330,\n    \"left\": 489\n  },\n  {\n    \"id\": 278,\n    \"stationId\": \"lineD1_1\",\n    \"name\": \"Лобня\",\n    \"lineId\": \"lineD1\",\n    \"top\": 1059,\n    \"left\": 867,\n    \"outside\": true\n  },\n  {\n    \"id\": 279,\n    \"stationId\": \"lineD1_2\",\n    \"name\": \"Шереметьевская\",\n    \"lineId\": \"lineD1\",\n    \"top\": 1059,\n    \"left\": 867,\n    \"outside\": true\n  },\n  {\n    \"id\": 280,\n    \"stationId\": \"lineD1_3\",\n    \"name\": \"Хлебниково\",\n    \"lineId\": \"lineD1\",\n    \"top\": 1059,\n    \"left\": 867,\n    \"outside\": true\n  },\n  {\n    \"id\": 281,\n    \"stationId\": \"lineD1_4\",\n    \"name\": \"Водники\",\n    \"lineId\": \"lineD1\",\n    \"top\": 1059,\n    \"left\": 867,\n    \"outside\": true\n  },\n  {\n    \"id\": 282,\n    \"stationId\": \"lineD1_5\",\n    \"name\": \"Долгопрудная\",\n    \"lineId\": \"lineD1\",\n    \"top\": 1059,\n    \"left\": 867,\n    \"outside\": true\n  },\n  {\n    \"id\": 283,\n    \"stationId\": \"lineD1_6\",\n    \"name\": \"Новодачная\",\n    \"lineId\": \"lineD1\",\n    \"top\": 1059,\n    \"left\": 867,\n    \"outside\": true\n  },\n  {\n    \"id\": 284,\n    \"stationId\": \"lineD1_7\",\n    \"name\": \"Марк\",\n    \"lineId\": \"lineD1\",\n    \"top\": 339,\n    \"left\": 620\n  },\n  {\n    \"id\": 285,\n    \"stationId\": \"lineD1_8\",\n    \"name\": \"Лианозово\",\n    \"lineId\": \"lineD1\",\n    \"top\": 368,\n    \"left\": 620\n  },\n  {\n    \"id\": 286,\n    \"stationId\": \"lineD1_9\",\n    \"name\": \"Илимская\",\n    \"lineId\": \"lineD1\",\n    \"top\": 487,\n    \"left\": 620,\n    \"close\": true\n  },\n  {\n    \"id\": 287,\n    \"stationId\": \"lineD1_10\",\n    \"name\": \"Бескудниково\",\n    \"lineId\": \"lineD1\",\n    \"top\": 533,\n    \"left\": 732\n  },\n  {\n    \"id\": 288,\n    \"stationId\": \"lineD1_11\",\n    \"name\": \"Дегунино\",\n    \"lineId\": \"lineD1\",\n    \"top\": 639,\n    \"left\": 871\n  },\n  {\n    \"id\": 289,\n    \"stationId\": \"lineD1_12\",\n    \"name\": \"Окружная\",\n    \"lineId\": \"lineD1\",\n    \"top\": 715,\n    \"left\": 947\n  },\n  {\n    \"id\": 290,\n    \"stationId\": \"lineD1_13\",\n    \"name\": \"Петровско-Разумовская\",\n    \"lineId\": \"lineD1\",\n    \"top\": 809,\n    \"left\": 956,\n    \"close\": true\n  },\n  {\n    \"id\": 291,\n    \"stationId\": \"lineD1_14\",\n    \"name\": \"Тимирязевская\",\n    \"lineId\": \"lineD1\",\n    \"top\": 854,\n    \"left\": 911\n  },\n  {\n    \"id\": 292,\n    \"stationId\": \"lineD1_15\",\n    \"name\": \"Дмитровская\",\n    \"lineId\": \"lineD1\",\n    \"top\": 881,\n    \"left\": 884,\n    \"close\": true\n  },\n  {\n    \"id\": 293,\n    \"stationId\": \"lineD1_16\",\n    \"name\": \"Савёловская\",\n    \"lineId\": \"lineD1\",\n    \"top\": 945,\n    \"left\": 867\n  },\n  {\n    \"id\": 294,\n    \"stationId\": \"lineD1_17\",\n    \"name\": \"Белорусская\",\n    \"lineId\": \"lineD1\",\n    \"top\": 973,\n    \"left\": 867\n  },\n  {\n    \"id\": 295,\n    \"stationId\": \"lineD1_18\",\n    \"name\": \"Беговая\",\n    \"lineId\": \"lineD1\",\n    \"top\": 1002,\n    \"left\": 867\n  },\n  {\n    \"id\": 296,\n    \"stationId\": \"lineD1_19\",\n    \"name\": \"Тестовская\",\n    \"lineId\": \"lineD1\",\n    \"top\": 1030,\n    \"left\": 867\n  },\n  {\n    \"id\": 297,\n    \"stationId\": \"lineD1_20\",\n    \"name\": \"Фили\",\n    \"lineId\": \"lineD1\",\n    \"top\": 1059,\n    \"left\": 867\n  },\n  {\n    \"id\": 298,\n    \"stationId\": \"lineD1_21\",\n    \"name\": \"Славянский бульвар\",\n    \"lineId\": \"lineD1\",\n    \"top\": 1059,\n    \"left\": 867\n  },\n  {\n    \"id\": 299,\n    \"stationId\": \"lineD1_22\",\n    \"name\": \"Кунцевская\",\n    \"lineId\": \"lineD1\",\n    \"top\": 1059,\n    \"left\": 867\n  },\n  {\n    \"id\": 300,\n    \"stationId\": \"lineD1_23\",\n    \"name\": \"Рабочий поселок\",\n    \"lineId\": \"lineD1\",\n    \"top\": 1059,\n    \"left\": 867\n  },\n  {\n    \"id\": 301,\n    \"stationId\": \"lineD1_24\",\n    \"name\": \"Сетунь\",\n    \"lineId\": \"lineD1\",\n    \"top\": 1059,\n    \"left\": 867\n  },\n  {\n    \"id\": 302,\n    \"stationId\": \"lineD1_25\",\n    \"name\": \"Немчиновка\",\n    \"lineId\": \"lineD1\",\n    \"top\": 1059,\n    \"left\": 867,\n    \"outside\": true\n  },\n  {\n    \"id\": 303,\n    \"stationId\": \"lineD1_26\",\n    \"name\": \"Сколково\",\n    \"lineId\": \"lineD1\",\n    \"top\": 1059,\n    \"left\": 867,\n    \"outside\": true\n  },\n  {\n    \"id\": 304,\n    \"stationId\": \"lineD1_27\",\n    \"name\": \"Баковка\",\n    \"lineId\": \"lineD1\",\n    \"top\": 1059,\n    \"left\": 867,\n    \"outside\": true\n  },\n  {\n    \"id\": 305,\n    \"stationId\": \"lineD1_28\",\n    \"name\": \"Одинцово\",\n    \"lineId\": \"lineD1\",\n    \"top\": 1059,\n    \"left\": 867,\n    \"outside\": true\n  },\n  {\n    \"id\": 306,\n    \"stationId\": \"lineD2_1\",\n    \"name\": \"Нахабино\",\n    \"lineId\": \"lineD2\",\n    \"top\": 1059,\n    \"left\": 867,\n    \"outside\": true\n  },\n  {\n    \"id\": 307,\n    \"stationId\": \"lineD2_2\",\n    \"name\": \"Аникеевка\",\n    \"lineId\": \"lineD2\",\n    \"top\": 1059,\n    \"left\": 867,\n    \"outside\": true\n  },\n  {\n    \"id\": 308,\n    \"stationId\": \"lineD2_3\",\n    \"name\": \"Опалиха\",\n    \"lineId\": \"lineD2\",\n    \"top\": 1059,\n    \"left\": 867,\n    \"outside\": true\n  },\n  {\n    \"id\": 309,\n    \"stationId\": \"lineD2_4\",\n    \"name\": \"Красногорская\",\n    \"lineId\": \"lineD2\",\n    \"top\": 1059,\n    \"left\": 867,\n    \"outside\": true\n  },\n  {\n    \"id\": 310,\n    \"stationId\": \"lineD2_5\",\n    \"name\": \"Павшино\",\n    \"lineId\": \"lineD2\",\n    \"top\": 1059,\n    \"left\": 867,\n    \"outside\": true\n  },\n  {\n    \"id\": 311,\n    \"stationId\": \"lineD2_6\",\n    \"name\": \"Пенягино\",\n    \"lineId\": \"lineD2\",\n    \"top\": 1059,\n    \"left\": 867,\n    \"outside\": true\n  },\n  {\n    \"id\": 312,\n    \"stationId\": \"lineD2_7\",\n    \"name\": \"Волоколамская\",\n    \"lineId\": \"lineD2\",\n    \"top\": 339,\n    \"left\": 620\n  },\n  {\n    \"id\": 313,\n    \"stationId\": \"lineD2_8\",\n    \"name\": \"Трикотажная\",\n    \"lineId\": \"lineD2\",\n    \"top\": 368,\n    \"left\": 620\n  },\n  {\n    \"id\": 314,\n    \"stationId\": \"lineD2_9\",\n    \"name\": \"Тушинская\",\n    \"lineId\": \"lineD2\",\n    \"top\": 487,\n    \"left\": 620\n  },\n  {\n    \"id\": 315,\n    \"stationId\": \"lineD2_10\",\n    \"name\": \"Щукинская\",\n    \"lineId\": \"lineD2\",\n    \"top\": 533,\n    \"left\": 732\n  },\n  {\n    \"id\": 316,\n    \"stationId\": \"lineD2_11\",\n    \"name\": \"Стрешнево\",\n    \"lineId\": \"lineD2\",\n    \"top\": 639,\n    \"left\": 871\n  },\n  {\n    \"id\": 317,\n    \"stationId\": \"lineD2_12\",\n    \"name\": \"Красный балтиец\",\n    \"lineId\": \"lineD2\",\n    \"top\": 715,\n    \"left\": 947\n  },\n  {\n    \"id\": 318,\n    \"stationId\": \"lineD2_13\",\n    \"name\": \"Гражданская\",\n    \"lineId\": \"lineD2\",\n    \"top\": 809,\n    \"left\": 956\n  },\n  {\n    \"id\": 319,\n    \"stationId\": \"lineD2_14\",\n    \"name\": \"Дмитровская\",\n    \"lineId\": \"lineD2\",\n    \"top\": 854,\n    \"left\": 911\n  },\n  {\n    \"id\": 320,\n    \"stationId\": \"lineD2_15\",\n    \"name\": \"Марьина Роща\",\n    \"lineId\": \"lineD2\",\n    \"top\": 881,\n    \"left\": 884,\n    \"close\": true\n  },\n  {\n    \"id\": 321,\n    \"stationId\": \"lineD2_16\",\n    \"name\": \"Рижская\",\n    \"lineId\": \"lineD2\",\n    \"top\": 945,\n    \"left\": 867\n  },\n  {\n    \"id\": 322,\n    \"stationId\": \"lineD2_17\",\n    \"name\": \"Каланчёвская\",\n    \"lineId\": \"lineD2\",\n    \"top\": 973,\n    \"left\": 867\n  },\n  {\n    \"id\": 324,\n    \"stationId\": \"lineD2_19\",\n    \"name\": \"Москва Товарная\",\n    \"lineId\": \"lineD2\",\n    \"top\": 1030,\n    \"left\": 867\n  },\n  {\n    \"id\": 325,\n    \"stationId\": \"lineD2_20\",\n    \"name\": \"Калитники\",\n    \"lineId\": \"lineD2\",\n    \"top\": 1059,\n    \"left\": 867\n  },\n  {\n    \"id\": 326,\n    \"stationId\": \"lineD2_21\",\n    \"name\": \"Новохохловская\",\n    \"lineId\": \"lineD2\",\n    \"top\": 1059,\n    \"left\": 867\n  },\n  {\n    \"id\": 327,\n    \"stationId\": \"lineD2_22\",\n    \"name\": \"Текстильщики\",\n    \"lineId\": \"lineD2\",\n    \"top\": 1059,\n    \"left\": 867\n  },\n  {\n    \"id\": 328,\n    \"stationId\": \"lineD2_23\",\n    \"name\": \"Печатники\",\n    \"lineId\": \"lineD2\",\n    \"top\": 1059,\n    \"left\": 867,\n    \"close\": true\n  },\n  {\n    \"id\": 329,\n    \"stationId\": \"lineD2_24\",\n    \"name\": \"Люблино\",\n    \"lineId\": \"lineD2\",\n    \"top\": 1059,\n    \"left\": 867\n  },\n  {\n    \"id\": 330,\n    \"stationId\": \"lineD2_25\",\n    \"name\": \"Депо\",\n    \"lineId\": \"lineD2\",\n    \"top\": 1059,\n    \"left\": 867\n  },\n  {\n    \"id\": 331,\n    \"stationId\": \"lineD2_26\",\n    \"name\": \"Перерва\",\n    \"lineId\": \"lineD2\",\n    \"top\": 1059,\n    \"left\": 867\n  },\n  {\n    \"id\": 332,\n    \"stationId\": \"lineD2_27\",\n    \"name\": \"Курьяново\",\n    \"lineId\": \"lineD2\",\n    \"top\": 1059,\n    \"left\": 867,\n    \"close\": true\n  },\n  {\n    \"id\": 333,\n    \"stationId\": \"lineD2_28\",\n    \"name\": \"Москворечье\",\n    \"lineId\": \"lineD2\",\n    \"top\": 1059,\n    \"left\": 867\n  },\n  {\n    \"id\": 334,\n    \"stationId\": \"lineD2_29\",\n    \"name\": \"Царицыно\",\n    \"lineId\": \"lineD2\",\n    \"top\": 1059,\n    \"left\": 867\n  },\n  {\n    \"id\": 335,\n    \"stationId\": \"lineD2_30\",\n    \"name\": \"Котляково\",\n    \"lineId\": \"lineD2\",\n    \"top\": 1059,\n    \"left\": 867,\n    \"close\": true\n  },\n  {\n    \"id\": 336,\n    \"stationId\": \"lineD2_31\",\n    \"name\": \"Покровское\",\n    \"lineId\": \"lineD2\",\n    \"top\": 1059,\n    \"left\": 867\n  },\n  {\n    \"id\": 337,\n    \"stationId\": \"lineD2_32\",\n    \"name\": \"Красный строитель\",\n    \"lineId\": \"lineD2\",\n    \"top\": 1059,\n    \"left\": 867\n  },\n  {\n    \"id\": 338,\n    \"stationId\": \"lineD2_33\",\n    \"name\": \"Битца\",\n    \"lineId\": \"lineD2\",\n    \"top\": 1059,\n    \"left\": 867\n  },\n  {\n    \"id\": 339,\n    \"stationId\": \"lineD2_34\",\n    \"name\": \"Бутово\",\n    \"lineId\": \"lineD2\",\n    \"top\": 1059,\n    \"left\": 867\n  },\n  {\n    \"id\": 340,\n    \"stationId\": \"lineD2_35\",\n    \"name\": \"Щербинка\",\n    \"lineId\": \"lineD2\",\n    \"top\": 1059,\n    \"left\": 867\n  },\n  {\n    \"id\": 341,\n    \"stationId\": \"lineD2_36\",\n    \"name\": \"Остафьево\",\n    \"lineId\": \"lineD2\",\n    \"top\": 1059,\n    \"left\": 867\n  },\n  {\n    \"id\": 342,\n    \"stationId\": \"lineD2_37\",\n    \"name\": \"Силикатная\",\n    \"lineId\": \"lineD2\",\n    \"top\": 1059,\n    \"left\": 867,\n    \"outside\": true\n  },\n  {\n    \"id\": 343,\n    \"stationId\": \"lineD2_38\",\n    \"name\": \"Подольск\",\n    \"lineId\": \"lineD2\",\n    \"top\": 1059,\n    \"left\": 867,\n    \"outside\": true\n  },\n  {\n    \"id\": 96,\n    \"stationId\": \"line5_11\",\n    \"name\": \"Новослободская\",\n    \"lineId\": \"line5\",\n    \"inCircle\": true,\n    \"top\": 429,\n    \"left\": 542,\n    \"labelTop\": 8,\n    \"labelLeft\": 1\n  },\n  {\n    \"id\": 173,\n    \"stationId\": \"line9_9\",\n    \"name\": \"Менделеевская\",\n    \"lineId\": \"line9\",\n    \"inCircle\": true,\n    \"top\": 415,\n    \"left\": 527\n  },\n  {\n    \"id\": 97,\n    \"stationId\": \"line5_12\",\n    \"name\": \"Проспект Мира\",\n    \"lineId\": \"line5\",\n    \"inCircle\": true,\n    \"top\": 413,\n    \"left\": 686,\n    \"labelTop\": -20,\n    \"labelLeft\": 16\n  },\n  {\n    \"id\": 105,\n    \"stationId\": \"line6_8\",\n    \"name\": \"Проспект Мира\",\n    \"lineId\": \"line6\",\n    \"inCircle\": true,\n    \"top\": 398,\n    \"left\": 700\n  },\n  {\n    \"id\": 6,\n    \"stationId\": \"line1_6\",\n    \"name\": \"Комсомольская\",\n    \"lineId\": \"line1\",\n    \"inCircle\": true,\n    \"top\": 472,\n    \"left\": 834\n  },\n  {\n    \"id\": 86,\n    \"stationId\": \"line5_1\",\n    \"name\": \"Комсомольская\",\n    \"lineId\": \"line5\",\n    \"inCircle\": true,\n    \"top\": 486,\n    \"left\": 819,\n    \"labelTop\": -15,\n    \"labelLeft\": 16\n  },\n  {\n    \"id\": 65,\n    \"stationId\": \"line3_15\",\n    \"name\": \"Курская\",\n    \"lineId\": \"line3\",\n    \"inCircle\": true,\n    \"top\": 624,\n    \"left\": 857\n  },\n  {\n    \"id\": 87,\n    \"stationId\": \"line5_2\",\n    \"name\": \"Курская\",\n    \"lineId\": \"line5\",\n    \"inCircle\": true,\n    \"top\": 625,\n    \"left\": 885\n  },\n  {\n    \"id\": 323,\n    \"stationId\": \"lineD2_18\",\n    \"name\": \"Курская\",\n    \"lineId\": \"lineD2\",\n    \"inCircle\": true,\n    \"top\": 1002,\n    \"left\": 867\n  },\n  {\n    \"id\": 200,\n    \"stationId\": \"line10_11\",\n    \"name\": \"Чкаловская\",\n    \"lineId\": \"line10\",\n    \"inCircle\": true,\n    \"top\": 639,\n    \"left\": 871\n  },\n  {\n    \"id\": 88,\n    \"stationId\": \"line5_3\",\n    \"name\": \"Таганская\",\n    \"lineId\": \"line5\",\n    \"inCircle\": true,\n    \"top\": 736,\n    \"left\": 874\n  },\n  {\n    \"id\": 135,\n    \"stationId\": \"line7_14\",\n    \"name\": \"Таганская\",\n    \"lineId\": \"line7\",\n    \"inCircle\": true,\n    \"top\": 735,\n    \"left\": 853\n  },\n  {\n    \"id\": 151,\n    \"stationId\": \"line8_7\",\n    \"name\": \"Марксистская\",\n    \"lineId\": \"line8\",\n    \"inCircle\": true,\n    \"top\": 715,\n    \"left\": 853\n  },\n  {\n    \"id\": 40,\n    \"stationId\": \"line2_14\",\n    \"name\": \"Павелецкая\",\n    \"lineId\": \"line2\",\n    \"inCircle\": true,\n    \"top\": 899,\n    \"left\": 744\n  },\n  {\n    \"id\": 89,\n    \"stationId\": \"line5_4\",\n    \"name\": \"Павелецкая\",\n    \"lineId\": \"line5\",\n    \"inCircle\": true,\n    \"top\": 879,\n    \"left\": 744\n  },\n  {\n    \"id\": 178,\n    \"stationId\": \"line9_14\",\n    \"name\": \"Серпуховская\",\n    \"lineId\": \"line9\",\n    \"inCircle\": true,\n    \"top\": 916,\n    \"left\": 589\n  },\n  {\n    \"id\": 90,\n    \"stationId\": \"line5_5\",\n    \"name\": \"Добрынинская\",\n    \"lineId\": \"line5\",\n    \"inCircle\": true,\n    \"top\": 896,\n    \"left\": 590\n  },\n  {\n    \"id\": 91,\n    \"stationId\": \"line5_6\",\n    \"name\": \"Октябрьская\",\n    \"lineId\": \"line5\",\n    \"inCircle\": true,\n    \"top\": 864,\n    \"left\": 510\n  },\n  {\n    \"id\": 13,\n    \"stationId\": \"line1_13\",\n    \"name\": \"Парк культуры\",\n    \"lineId\": \"line1\",\n    \"inCircle\": true,\n    \"top\": 803,\n    \"left\": 420\n  },\n  {\n    \"id\": 92,\n    \"stationId\": \"line5_7\",\n    \"name\": \"Парк культуры\",\n    \"lineId\": \"line5\",\n    \"inCircle\": true,\n    \"top\": 789,\n    \"left\": 434\n  },\n  {\n    \"id\": 61,\n    \"stationId\": \"line3_11\",\n    \"name\": \"Киевская\",\n    \"lineId\": \"line3\",\n    \"inCircle\": true,\n    \"top\": 722,\n    \"left\": 386\n  },\n  {\n    \"id\": 76,\n    \"stationId\": \"line4_4\",\n    \"name\": \"Киевская\",\n    \"lineId\": \"line4\",\n    \"inCircle\": true,\n    \"top\": 708,\n    \"left\": 371\n  },\n  {\n    \"id\": 93,\n    \"stationId\": \"line5_8\",\n    \"name\": \"Киевская\",\n    \"lineId\": \"line5\",\n    \"inCircle\": true,\n    \"top\": 708,\n    \"left\": 400,\n    \"labelRight\": -6,\n    \"labelBottom\": 5\n  },\n  {\n    \"id\": 94,\n    \"stationId\": \"line5_9\",\n    \"name\": \"Краснопресненская\",\n    \"lineId\": \"line5\",\n    \"inCircle\": true,\n    \"top\": 608,\n    \"left\": 399,\n    \"labelTop\": 4,\n    \"labelLeft\": 2\n  },\n  {\n    \"id\": 131,\n    \"stationId\": \"line7_10\",\n    \"name\": \"Баррикадная\",\n    \"lineId\": \"line7\",\n    \"inCircle\": true,\n    \"top\": 594,\n    \"left\": 384\n  },\n  {\n    \"id\": 35,\n    \"stationId\": \"line2_9\",\n    \"name\": \"Белорусская\",\n    \"lineId\": \"line2\",\n    \"inCircle\": true,\n    \"top\": 483,\n    \"left\": 438\n  },\n  {\n    \"id\": 95,\n    \"stationId\": \"line5_10\",\n    \"name\": \"Белорусская\",\n    \"lineId\": \"line5\",\n    \"inCircle\": true,\n    \"top\": 497,\n    \"left\": 452,\n    \"labelTop\": -12,\n    \"labelLeft\": 10\n  },\n  {\n    \"id\": 174,\n    \"stationId\": \"line9_10\",\n    \"name\": \"Цветной бульвар\",\n    \"lineId\": \"line9\",\n    \"inCircle\": true,\n    \"top\": 508,\n    \"left\": 620\n  },\n  {\n    \"id\": 198,\n    \"stationId\": \"line10_9\",\n    \"name\": \"Трубная\",\n    \"lineId\": \"line10\",\n    \"inCircle\": true,\n    \"top\": 487,\n    \"left\": 620\n  },\n  {\n    \"id\": 106,\n    \"stationId\": \"line6_9\",\n    \"name\": \"Сухаревская\",\n    \"lineId\": \"line6\",\n    \"inCircle\": true,\n    \"top\": 458,\n    \"left\": 685\n  },\n  {\n    \"id\": 7,\n    \"stationId\": \"line1_7\",\n    \"name\": \"Красные ворота\",\n    \"lineId\": \"line1\",\n    \"inCircle\": true,\n    \"top\": 514,\n    \"left\": 792\n  },\n  {\n    \"id\": 107,\n    \"stationId\": \"line6_10\",\n    \"name\": \"Тургеневская\",\n    \"lineId\": \"line6\",\n    \"inCircle\": true,\n    \"top\": 553,\n    \"left\": 732\n  },\n  {\n    \"id\": 199,\n    \"stationId\": \"line10_10\",\n    \"name\": \"Сретенский бульвар\",\n    \"lineId\": \"line10\",\n    \"inCircle\": true,\n    \"top\": 533,\n    \"left\": 732\n  },\n  {\n    \"id\": 8,\n    \"stationId\": \"line1_8\",\n    \"name\": \"Чистые пруды\",\n    \"lineId\": \"line1\",\n    \"inCircle\": true,\n    \"top\": 553,\n    \"left\": 752,\n    \"labelTop\": -4,\n    \"labelLeft\": 6\n  },\n  {\n    \"id\": 108,\n    \"stationId\": \"line6_11\",\n    \"name\": \"Китай-город\",\n    \"lineId\": \"line6\",\n    \"inCircle\": true,\n    \"top\": 677,\n    \"left\": 836\n  },\n  {\n    \"id\": 134,\n    \"stationId\": \"line7_13\",\n    \"name\": \"Китай-город\",\n    \"lineId\": \"line7\",\n    \"inCircle\": true,\n    \"top\": 662,\n    \"left\": 821\n  },\n  {\n    \"id\": 39,\n    \"stationId\": \"line2_13\",\n    \"name\": \"Новокузнецкая\",\n    \"lineId\": \"line2\",\n    \"inCircle\": true,\n    \"top\": 808,\n    \"left\": 744\n  },\n  {\n    \"id\": 109,\n    \"stationId\": \"line6_12\",\n    \"name\": \"Третьяковская\",\n    \"lineId\": \"line6\",\n    \"inCircle\": true,\n    \"top\": 789,\n    \"left\": 764\n  },\n  {\n    \"id\": 152,\n    \"stationId\": \"line8_8\",\n    \"name\": \"Третьяковская\",\n    \"lineId\": \"line8\",\n    \"inCircle\": true,\n    \"top\": 789,\n    \"left\": 744\n  },\n  {\n    \"id\": 177,\n    \"stationId\": \"line9_13\",\n    \"name\": \"Полянка\",\n    \"lineId\": \"line9\",\n    \"inCircle\": true,\n    \"top\": 845,\n    \"left\": 589\n  },\n  {\n    \"id\": 12,\n    \"stationId\": \"line1_12\",\n    \"name\": \"Кропоткинская\",\n    \"lineId\": \"line1\",\n    \"inCircle\": true,\n    \"top\": 789,\n    \"left\": 502\n  },\n  {\n    \"id\": 176,\n    \"stationId\": \"line9_12\",\n    \"name\": \"Боровицкая\",\n    \"lineId\": \"line9\",\n    \"inCircle\": true,\n    \"top\": 752,\n    \"left\": 523\n  },\n  {\n    \"id\": 62,\n    \"stationId\": \"line3_12\",\n    \"name\": \"Смоленская\",\n    \"lineId\": \"line3\",\n    \"inCircle\": true,\n    \"top\": 723,\n    \"left\": 453\n  },\n  {\n    \"id\": 75,\n    \"stationId\": \"line4_3\",\n    \"name\": \"Смоленская\",\n    \"lineId\": \"line4\",\n    \"inCircle\": true,\n    \"top\": 708,\n    \"left\": 439\n  },\n  {\n    \"id\": 63,\n    \"stationId\": \"line3_13\",\n    \"name\": \"Арбатская\",\n    \"lineId\": \"line3\",\n    \"inCircle\": true,\n    \"top\": 722,\n    \"left\": 523\n  },\n  {\n    \"id\": 74,\n    \"stationId\": \"line4_2\",\n    \"name\": \"Арбатская\",\n    \"lineId\": \"line4\",\n    \"inCircle\": true,\n    \"top\": 707,\n    \"left\": 486\n  },\n  {\n    \"id\": 11,\n    \"stationId\": \"line1_11\",\n    \"name\": \"Библиотека им. Ленина\",\n    \"lineId\": \"line1\",\n    \"inCircle\": true,\n    \"top\": 752,\n    \"left\": 553\n  },\n  {\n    \"id\": 73,\n    \"stationId\": \"line4_1\",\n    \"name\": \"Александровский сад\",\n    \"lineId\": \"line4\",\n    \"inCircle\": true,\n    \"top\": 722,\n    \"left\": 553\n  },\n  {\n    \"id\": 132,\n    \"stationId\": \"line7_11\",\n    \"name\": \"Пушкинская\",\n    \"lineId\": \"line7\",\n    \"inCircle\": true,\n    \"top\": 608,\n    \"left\": 563\n  },\n  {\n    \"id\": 37,\n    \"stationId\": \"line2_11\",\n    \"name\": \"Тверская\",\n    \"lineId\": \"line2\",\n    \"inCircle\": true,\n    \"top\": 593,\n    \"left\": 548\n  },\n  {\n    \"id\": 175,\n    \"stationId\": \"line9_11\",\n    \"name\": \"Чеховская\",\n    \"lineId\": \"line9\",\n    \"inCircle\": true,\n    \"top\": 593,\n    \"left\": 577\n  },\n  {\n    \"id\": 36,\n    \"stationId\": \"line2_10\",\n    \"name\": \"Маяковская\",\n    \"lineId\": \"line2\",\n    \"inCircle\": true,\n    \"top\": 554,\n    \"left\": 510\n  },\n  {\n    \"id\": 133,\n    \"stationId\": \"line7_12\",\n    \"name\": \"Кузнецкий мост\",\n    \"lineId\": \"line7\",\n    \"inCircle\": true,\n    \"top\": 608,\n    \"left\": 725\n  },\n  {\n    \"id\": 9,\n    \"stationId\": \"line1_9\",\n    \"name\": \"Лубянка\",\n    \"lineId\": \"line1\",\n    \"inCircle\": true,\n    \"top\": 594,\n    \"left\": 712\n  },\n  {\n    \"id\": 10,\n    \"stationId\": \"line1_10\",\n    \"name\": \"Охотный Ряд\",\n    \"lineId\": \"line1\",\n    \"inCircle\": true,\n    \"top\": 675,\n    \"left\": 631\n  },\n  {\n    \"id\": 38,\n    \"stationId\": \"line2_12\",\n    \"name\": \"Театральная\",\n    \"lineId\": \"line2\",\n    \"inCircle\": true,\n    \"top\": 660,\n    \"left\": 616\n  },\n  {\n    \"id\": 64,\n    \"stationId\": \"line3_14\",\n    \"name\": \"Площадь Революции\",\n    \"lineId\": \"line3\",\n    \"inCircle\": true,\n    \"top\": 689,\n    \"left\": 644\n  },\n  {\n    \"id\": 197,\n    \"stationId\": \"line10_8\",\n    \"name\": \"Достоевская\",\n    \"lineId\": \"line10\",\n    \"inCircle\": true,\n    \"top\": 368,\n    \"left\": 620\n  }\n]","import { IRoute } from 'src/store';\n\nexport const MOCK_ROUTES: IRoute[] = [\n  {\n    \"routeId\": 1,\n    \"stations\": [\n      \"line1_2\",\n      \"line1_3\",\n      \"line1_4\",\n      \"line1_5\",\n      \"line1_14\"\n    ],\n    \"status\": 3,\n    \"payload\": null,\n    \"created\": 1635046958597,\n    \"calculated\": 1635047716015,\n    \"result\": {\n      \"adjacencyMatrixCsv\": \"[[0.0,233.0,423.0,531.0,1515.0],[233.0,0.0,190.0,298.0,1282.0],[423.0,190.0,0.0,108.0,1092.0],[531.0,298.0,108.0,0.0,984.0],[1515.0,1282.0,1092.0,984.0,0.0]]\",\n      \"route\": [\n        \"line1_2\",\n        \"line1_3\",\n        \"line1_4\",\n        \"line1_14\",\n        \"line1_5\",\n        \"line1_2\"\n      ],\n      \"totalTime\": 3030,\n      \"quboMatrixCsv\": \"[[-14917.0,7575.0,7575.0,7575.0,15150.0,233.0,423.0,531.0,7575.0,0.0,0.0,0.0,7575.0,0.0,0.0,0.0],[7575.0,-14727.0,7575.0,7575.0,233.0,15150.0,190.0,298.0,0.0,7575.0,0.0,0.0,0.0,7575.0,0.0,0.0],[7575.0,7575.0,-14619.0,7575.0,423.0,190.0,15150.0,108.0,0.0,0.0,7575.0,0.0,0.0,0.0,7575.0,0.0],[7575.0,7575.0,7575.0,-13635.0,531.0,298.0,108.0,15150.0,0.0,0.0,0.0,7575.0,0.0,0.0,0.0,7575.0],[7575.0,0.0,0.0,0.0,-15150.0,7575.0,7575.0,7575.0,15150.0,233.0,423.0,531.0,7575.0,0.0,0.0,0.0],[0.0,7575.0,0.0,0.0,7575.0,-15150.0,7575.0,7575.0,233.0,15150.0,190.0,298.0,0.0,7575.0,0.0,0.0],[0.0,0.0,7575.0,0.0,7575.0,7575.0,-15150.0,7575.0,423.0,190.0,15150.0,108.0,0.0,0.0,7575.0,0.0],[0.0,0.0,0.0,7575.0,7575.0,7575.0,7575.0,-15150.0,531.0,298.0,108.0,15150.0,0.0,0.0,0.0,7575.0],[7575.0,0.0,0.0,0.0,7575.0,0.0,0.0,0.0,-15150.0,7575.0,7575.0,7575.0,15150.0,233.0,423.0,531.0],[0.0,7575.0,0.0,0.0,0.0,7575.0,0.0,0.0,7575.0,-15150.0,7575.0,7575.0,233.0,15150.0,190.0,298.0],[0.0,0.0,7575.0,0.0,0.0,0.0,7575.0,0.0,7575.0,7575.0,-15150.0,7575.0,423.0,190.0,15150.0,108.0],[0.0,0.0,0.0,7575.0,0.0,0.0,0.0,7575.0,7575.0,7575.0,7575.0,-15150.0,531.0,298.0,108.0,15150.0],[7575.0,0.0,0.0,0.0,7575.0,0.0,0.0,0.0,7575.0,0.0,0.0,0.0,-14917.0,7575.0,7575.0,7575.0],[0.0,7575.0,0.0,0.0,0.0,7575.0,0.0,0.0,0.0,7575.0,0.0,0.0,7575.0,-14727.0,7575.0,7575.0],[0.0,0.0,7575.0,0.0,0.0,0.0,7575.0,0.0,0.0,0.0,7575.0,0.0,7575.0,7575.0,-14619.0,7575.0],[0.0,0.0,0.0,7575.0,0.0,0.0,0.0,7575.0,0.0,0.0,0.0,7575.0,7575.0,7575.0,7575.0,-13635.0]]\",\n      \"solutionType\": \"feasible\",\n      \"solverType\": \"remote:simcim\",\n      \"hamEnergy\": -59197.0,\n      \"routeCsv\": \"line1_2,line1_3,line1_4,line1_14,line1_5,line1_2\"\n    }\n  },\n  {\n    \"routeId\": 2,\n    \"stations\": [\n      \"line1_1\",\n      \"line1_14\",\n      \"line2_7\",\n      \"line2_8\"\n    ],\n    \"status\": 3,\n    \"payload\": null,\n    \"created\": 1635047523481,\n    \"calculated\": 1635047749455,\n    \"result\": {\n      \"adjacencyMatrixCsv\": \"[[0.0,1653.0,2067.0,1894.0],[1653.0,0.0,1399.0,1226.0],[2067.0,1399.0,0.0,173.0],[1894.0,1226.0,173.0,0.0]]\",\n      \"route\": [\n        \"line1_1\",\n        \"line1_14\",\n        \"line2_7\",\n        \"line2_8\",\n        \"line1_1\"\n      ],\n      \"totalTime\": 5119,\n      \"quboMatrixCsv\": \"[[-19017.0,10335.0,10335.0,20670.0,1653.0,2067.0,10335.0,0.0,0.0],[10335.0,-18603.0,10335.0,1653.0,20670.0,1399.0,0.0,10335.0,0.0],[10335.0,10335.0,-18776.0,2067.0,1399.0,20670.0,0.0,0.0,10335.0],[10335.0,0.0,0.0,-20670.0,10335.0,10335.0,20670.0,1653.0,2067.0],[0.0,10335.0,0.0,10335.0,-20670.0,10335.0,1653.0,20670.0,1399.0],[0.0,0.0,10335.0,10335.0,10335.0,-20670.0,2067.0,1399.0,20670.0],[10335.0,0.0,0.0,10335.0,0.0,0.0,-19017.0,10335.0,10335.0],[0.0,10335.0,0.0,0.0,10335.0,0.0,10335.0,-18603.0,10335.0],[0.0,0.0,10335.0,0.0,0.0,10335.0,10335.0,10335.0,-18776.0]]\",\n      \"solutionType\": \"feasible\",\n      \"solverType\": \"remote:simcim\",\n      \"hamEnergy\": -55411.0,\n      \"routeCsv\": \"line1_1,line1_14,line2_7,line2_8,line1_1\"\n    }\n  },\n  {\n    \"routeId\": 3,\n    \"stations\": [\n      \"line1_4\",\n      \"line6_4\",\n      \"line9_16\",\n      \"line13_6\",\n      \"line14_28\"\n    ],\n    \"status\": 1,\n    \"payload\": null,\n    \"created\": 1635048286445,\n    \"result\": {\n      \"adjacencyMatrixCsv\": null,\n      \"totalTime\": null,\n      \"quboMatrixCsv\": null,\n      \"solutionType\": null,\n      \"solverType\": null,\n      \"hamEnergy\": null,\n      \"routeCsv\": null\n    }\n  },\n  {\n    \"routeId\": 4,\n    \"stations\": [\n      \"line1_14\",\n      \"line1_16\",\n      \"line1_18\",\n      \"line1_19\",\n      \"line1_20\"\n    ],\n    \"status\": 1,\n    \"payload\": null,\n    \"created\": 1635049148444,\n    \"result\": {\n      \"adjacencyMatrixCsv\": null,\n      \"totalTime\": null,\n      \"quboMatrixCsv\": null,\n      \"solutionType\": null,\n      \"solverType\": null,\n      \"hamEnergy\": null,\n      \"routeCsv\": null\n    }\n  },\n  {\n    \"routeId\": 5,\n    \"stations\": [\n      \"line1_1\",\n      \"line1_2\",\n      \"line1_3\",\n      \"line1_4\",\n      \"line1_5\"\n    ],\n    \"status\": 1,\n    \"payload\": null,\n    \"created\": 1635049188367,\n    \"result\": {\n      \"adjacencyMatrixCsv\": null,\n      \"totalTime\": null,\n      \"quboMatrixCsv\": null,\n      \"solutionType\": null,\n      \"solverType\": null,\n      \"hamEnergy\": null,\n      \"routeCsv\": null\n    }\n  }\n]","export const BACKEND_URL: string = 'http://52.149.226.198:8080/api'\nexport const MOCK_ENABLE: boolean = false;","interface DateTimeFormatOptions {\n  localeMatcher?: \"best fit\" | \"lookup\";\n  weekday?: \"long\" | \"short\" | \"narrow\";\n  era?: \"long\" | \"short\" | \"narrow\";\n  year?: \"numeric\" | \"2-digit\";\n  month?: \"numeric\" | \"2-digit\" | \"long\" | \"short\" | \"narrow\";\n  day?: \"numeric\" | \"2-digit\";\n  hour?: \"numeric\" | \"2-digit\";\n  minute?: \"numeric\" | \"2-digit\";\n  second?: \"numeric\" | \"2-digit\";\n  timeZoneName?: \"long\" | \"short\";\n  formatMatcher?: \"best fit\" | \"basic\";\n  hour12?: boolean;\n  timeZone?: string;\n}\n\nexport const convertToDate = (value) => {\n\n  if (!value) return undefined;\n  if (typeof value === 'object' && value.getDate()) {\n    return new Date(value);\n  } else if (typeof value === 'number') {\n    return new Date(value);\n  } else if (typeof value === 'string' && value.length >= 10) {\n    return new Date(value);\n  }\n  return undefined;\n}\n\nexport const genericDateToRusDateTime = (input, needSeconds?) => {\n  const options: DateTimeFormatOptions = {\n    year: 'numeric',\n    month: 'numeric',\n    day: 'numeric'\n  };\n\n  let date = convertToDate(input);\n  if (date && date instanceof Date) {\n    let datetime = date.toLocaleTimeString(\"ru\", options).split(', ').join(' ')\n\n    if (!needSeconds) {\n      datetime = datetime.substr(0, 16)\n    }\n    return datetime;\n  }\n\n  return '';\n}","\nexport const convertJsonStringToCsv = (csvString: string) => {\n\n  if (!csvString) return '';\n  try {\n    return JSON.parse(csvString).map((x) => x.join(\",\")).join(\"\\n\")\n  } catch (ex) {\n\n  }\n  return '';\n\n}","export const padZero = (str: string, len?: number) => {\n  len = len || 2;\n  const zeros = new Array(len).join('0');\n  return (zeros + str).slice(-len);\n}\n\nexport const invertColor = (hex: string, bw: boolean = true) => {\n  if (hex.indexOf('#') === 0) {\n    hex = hex.slice(1);\n  }\n\n  if (hex.length === 3) {\n    hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];\n  }\n  if (hex.length !== 6) {\n    throw new Error('Invalid HEX color.');\n  }\n  let r = parseInt(hex.slice(0, 2), 16),\n    g = parseInt(hex.slice(2, 4), 16),\n    b = parseInt(hex.slice(4, 6), 16);\n  if (bw) {\n\n    return (r * 0.299 + g * 0.587 + b * 0.114) > 186\n      ? '#000000'\n      : '#FFFFFF';\n  }\n\n  const rS = (255 - r).toString(16);\n  const gS = (255 - g).toString(16);\n  const bS = (255 - b).toString(16);\n\n  return \"#\" + padZero(rS) + padZero(gS) + padZero(bS);\n}","import { message } from 'antd';\nimport axios from 'axios';\nimport {\n  combine,\n  createApi,\n  createDomain,\n  createEffect,\n  createEvent,\n  createStore,\n  forward,\n  guard,\n  sample,\n  Store,\n} from 'effector';\nimport { useStore } from 'effector-react';\nimport { pending } from 'patronum';\nimport { callBackend } from 'src/utils';\n\nimport { setCommonState } from './common';\nimport { ILine, IRoute, IStation } from './types';\n\n/*\ngetLines\ngetStations\ncreateRoute\ngetRoutes\n*/\n\nexport const downloadDataFx = createEffect<void, any[]>(async () => {\n  const linesPromise = getLinesFx();\n  const stationsPromise = getStationsFx();\n  const routesPromise = getRoutesFx();\n\n  return Promise.all([linesPromise, stationsPromise, routesPromise])\n    .then((values) => {\n      dataNormalized({\n        lines: values[0],\n        stations: values[1],\n        routes: values[2]\n      });\n      return values;\n    });\n});\n\nconst dataNormalized = createEvent<{\n  lines: ILine[],\n  stations: IStation[],\n  routes: IRoute[]\n}>();\n\nsample({\n  clock: dataNormalized,\n  fn: ({ lines, stations, routes }) => {\n\n    const linesById: Record<string, ILine> = {}\n    lines.forEach(i => linesById[i.id] = i)\n\n    const stationsByStationId: Record<string, IStation> = {}\n    const stationsById: Record<string, IStation> = {}\n\n    const newStations: IStation[] = [];\n    stations.forEach(i => {\n\n      const line = linesById[i.lineId];\n\n      if (line) {\n        const newStation = {\n          ...i,\n          line\n        }\n        stationsByStationId[i.stationId] = newStation;\n        stationsById[i.id] = newStation;\n        newStations.push(newStation)\n      }\n\n    })\n\n\n\n    setLinesById(linesById)\n    setStationsByStationId(stationsByStationId)\n    setStationsById(stationsById)\n\n    const newRoutes: IRoute[] = [];\n\n    routes.forEach(i => {\n      const newRoute = {\n        ...i,\n        stationInstances: i.stations.map(j => stationsByStationId[j]),\n      }\n      if (newRoute.result?.route) {\n        newRoute.result.routeInstances = newRoute.result.route.map(j => stationsByStationId[j]);\n      }\n\n\n      newRoutes.push(newRoute);\n    })\n\n    setLines(lines);\n    setStations(newStations);\n    setRoutes(newRoutes);\n\n  }\n})\n\nexport const setLinesById = createEvent<Record<string, ILine>>();\nexport const $linesById = createStore<Record<string, ILine>>({})\n  .on(setLinesById, (_, result) => result)\n\nexport const setStationsByStationId = createEvent<Record<string, IStation>>();\nexport const $stationsByStationId = createStore<Record<string, IStation>>({})\n  .on(setStationsByStationId, (_, result) => result)\n\nexport const setStationsById = createEvent<Record<string, IStation>>();\nexport const $stationsById = createStore<Record<number, IStation>>({})\n  .on(setStationsById, (_, result) => result)\n\n\nexport const getLinesFx = createEffect<void, ILine[]>(async () => {\n  return callBackend('GET', '/getLines').then(data => data.filter(i => i.color !== '000000'))\n});\n\nexport const setLines = createEvent<ILine[]>()\nexport const $lines = createStore<ILine[]>([])\n  .on(setLines, (_, result) => result)\n\n\nexport const getStationsFx = createEffect<void, IStation[]>(async () => {\n  return callBackend('GET', '/getStations')\n});\n\nexport const setStations = createEvent<IStation[]>()\nexport const $stations = createStore<IStation[]>([])\n  .on(setStations, (_, result) => result)\n\n\n\nexport const getRoutesFx = createEffect<void, IRoute[]>(async () => {\n  return callBackend('GET', '/getRoutes').then(data => {\n    (data as IRoute[]).sort(function (a, b) {\n      return b.created - a.created\n    });\n    return data;\n  })\n})\n\nexport const createRouteFx = createEffect<IRoute, IRoute>(async (route) => {\n  return callBackend('POST', '/createRoute', route)\n})\n\n\n\ncreateRouteFx.done.watch(() => {\n  message.success('Маршрут добавлен в очередь');\n  downloadDataFx();\n})\n\n\nexport const $isLoading = pending({\n  effects: [\n    createRouteFx,\n    getRoutesFx,\n    getStationsFx,\n    getLinesFx\n  ]\n});\n\nexport const $isCreateRouteIsBusy = pending({\n  effects: [createRouteFx]\n})\n\n\n\nexport const setRoutes = createEvent<IRoute[]>()\nexport const $routes = createStore<IRoute[]>([])\n  .on(setRoutes, (_, result) => result)\n\n\nsample({\n  clock: getRoutesFx.done,\n  fn: (({ params, result }) => {\n    let isComputerBusy = false;\n    let queueCount = result.filter(i => i.status !== 3).length\n    if (queueCount > 0) {\n      isComputerBusy = true;\n    }\n\n    let calculatedCount = result.filter(i => i.status === 3).length\n\n    setCommonState({\n      isComputerBusy,\n      queueCount,\n      calculatedCount\n    })\n  })\n})\n\n\n","import { useStore } from 'effector-react';\n\nimport {\n  $isCreateRouteIsBusy,\n  $isLoading,\n  $lines,\n  $linesById,\n  $routes,\n  $stations,\n  $stationsById,\n  $stationsByStationId,\n} from './effects';\n\n\nexport const useLines = () => useStore($lines)\nexport const useStations = () => useStore($stations)\nexport const useRoutes = () => useStore($routes)\n\nexport const useLinesById = () => useStore($linesById)\n\nexport const useStationsByStationId = () => useStore($stationsByStationId)\nexport const useStationsById = () => useStore($stationsById)\n\nexport const useCreateRouteIsBusy = () => useStore($isCreateRouteIsBusy)\nexport const useIsLoading = () => useStore($isLoading)\n","import { CheckCircleFilled, FireFilled, HourglassOutlined, LoadingOutlined } from '@ant-design/icons';\nimport { Spin } from 'antd';\nimport React from 'react';\n\n\n\n\n\nexport const ComputerBusyStatus: React.FC<{\n  isBusy: boolean\n}> = ({ isBusy }) => {\n\n  let cln = 'nobg'\n  if (isBusy === true) {\n    cln = 'rdbg'\n  } else if (isBusy === false) {\n    cln = 'grgb'\n    //bg = { background: '#389e0d' }\n  }\n  let icon = null;\n  if (isBusy === true) {\n    icon = <span>\n      <HourglassOutlined style={{}} spin /> &nbsp;занят</span>\n  } else if (isBusy === false) {\n    icon = <span><CheckCircleFilled /> свободен</span>\n  } else if (isBusy === null) {\n    icon = <Spin indicator={<LoadingOutlined style={{ fontSize: 24, color: '#fff' }} spin />} />\n  }\n\n\n  return (\n    <div\n      className={\"busy-indicator \" + cln}\n      style={{\n        float: 'right',\n        textAlign: 'center',\n\n      }}>\n      {icon}\n    </div>\n  )\n}\n","import {\n  CarryOutOutlined,\n  CheckCircleFilled,\n  FireOutlined,\n  MenuUnfoldOutlined,\n  NodeIndexOutlined,\n  PlusOutlined,\n  UnorderedListOutlined,\n} from '@ant-design/icons';\nimport { Col, Layout, Menu, Row } from 'antd';\nimport SubMenu from 'antd/lib/menu/SubMenu';\nimport React from 'react';\nimport { useCommonState, useSelectedSideMenu } from 'src/store';\n\nimport { ComputerBusyStatus } from './ComputerBusyStatus';\n\nconst { Header, Content, Footer, Sider } = Layout;\n\n\n\nexport const HeaderContainer = () => {\n\n  const {\n    isComputerBusy\n  } = useCommonState()\n\n  const selectedSideMenu = useSelectedSideMenu();\n\n  let title = '';\n\n  if (selectedSideMenu === 'create') {\n    title = 'Выберите станции'\n  } else if (selectedSideMenu === 'queue') {\n    title = 'Маршруты в очереди'\n  } else if (selectedSideMenu === 'calculated') {\n    title = 'Посчитанные маршруты'\n  }\n\n  return (\n    <Header\n      className=\"nav-header-container\"\n      style={{\n        position: 'fixed',\n        zIndex: 1,\n        width: '100%',\n        color: '#fff',\n\n        margin: 0,\n        paddingRight: 0\n      }} >\n\n      <Row className=\"nav-header-bar\">\n        <Col xs={12} sm={12} md={12} lg={12} xl={12}>\n          <h3 className='nav-header-title' style={{ color: '#fff' }}>{title}</h3>\n        </Col>\n\n        <Col xs={12} sm={12} md={12} lg={12} xl={12}\n          style={{\n            paddingRight: 0,\n            height: '64px',\n          }} >\n\n          <ComputerBusyStatus isBusy={isComputerBusy} />\n\n        </Col>\n      </Row>\n    </Header>\n  )\n}\n","import {\n  CalculatorOutlined,\n  CarryOutOutlined,\n  CheckCircleOutlined,\n  CheckOutlined,\n  FieldBinaryOutlined,\n  FileAddOutlined,\n  FireOutlined,\n  HourglassOutlined,\n  MenuUnfoldOutlined,\n  NodeIndexOutlined,\n  PlusOutlined,\n  SlidersOutlined,\n  UnorderedListOutlined,\n} from '@ant-design/icons';\nimport { Badge, Layout, Menu } from 'antd';\nimport SubMenu from 'antd/lib/menu/SubMenu';\nimport React from 'react';\nimport { HashRouter as Router, Route, Switch, useHistory, useLocation, useParams } from 'react-router-dom';\nimport { menuSelected, useCommonState, useSelectedSideMenu } from 'src/store';\n\nconst { Sider } = Layout;\n\n\n\n\n\nexport const SideBar = () => {\n\n  const history = useHistory()\n  const location = useLocation();\n\n  const selectedSideMenu = useSelectedSideMenu();\n  const {\n    queueCount,\n    calculatedCount\n  } = useCommonState();\n\n  React.useEffect(() => {\n\n\n    if (location.pathname === '/') {\n      menuSelected('create')\n    } else if (location.pathname === '/queue') {\n      menuSelected('queue')\n    } else if (location.pathname === '/calculated') {\n      menuSelected('calculated')\n    }\n  }, [location])\n\n  const selectWithKey = (e: any) => history.push(\"/\" + (e.key === \"create\" ? \"\" : e.key))\n\n  return (\n    <Sider\n\n      theme='light'\n      breakpoint=\"lg\"\n      collapsedWidth=\"0\"\n      onBreakpoint={broken => {\n        console.log(broken);\n      }}\n      onCollapse={(collapsed, type) => {\n        console.log(collapsed, type);\n      }}\n      style={{\n        boxShadow: \"5px 8px 24px 5px rgba(208, 216, 243, 0.6)\",\n        marginTop: 64\n      }}\n    >\n      <div style={{\n        position: 'fixed',\n        top: 0,\n        height: 64,\n        width: 200,\n        color: '#fff',\n        padding: 16,\n        fontSize: 24,\n        background: 'rgba(24, 144, 255, 1)',\n        margin: 0,\n        zIndex: 2\n      }}>\n        Graphometrica\n      </div>\n      <Menu\n        mode=\"inline\"\n        selectedKeys={[selectedSideMenu]}\n\n        defaultOpenKeys={['rootMenu']}\n        style={{ height: '100%' }}\n      >\n\n        <SubMenu key=\"rootMenu\" title=\"Маршрут\">\n\n          <Menu.Item onClick={selectWithKey}\n            icon={<FileAddOutlined />} key=\"create\">\n            Создать</Menu.Item >\n          <Menu.Item onClick={selectWithKey} icon={<HourglassOutlined />} key=\"queue\">\n            <Badge size=\"small\" count={queueCount} offset={[15, 15]} color=\"blue\">В очереди</Badge>\n          </Menu.Item>\n          <Menu.Item onClick={selectWithKey} icon={<CalculatorOutlined />} key=\"calculated\">\n            <Badge size=\"small\" count={calculatedCount} offset={[15, 15]} color=\"blue\">Посчитано</Badge></Menu.Item>\n        </SubMenu>\n\n      </Menu>\n    </Sider>\n  )\n}\n","import {\n  CheckCircleFilled,\n  CheckCircleOutlined,\n  FireFilled,\n  UploadOutlined,\n  UserOutlined,\n  VideoCameraOutlined,\n} from '@ant-design/icons';\nimport { Col, Layout, Menu, PageHeader, Row, Typography } from 'antd';\nimport React from 'react';\nimport { useCommonState } from 'src/store';\n\nimport { HeaderContainer } from './HeaderContainer';\nimport { SideBar } from './SideBar';\n\n// import { Col, Container, Row } from 'react-grid-system';\n\nconst { Header, Content, Footer, Sider } = Layout;\n\n\n\nexport const LayoutContainer: React.FC = (props) => {\n\n  return (\n\n    <Layout>\n      <SideBar />\n      <Layout>\n\n\n        <HeaderContainer />\n\n        <Content className=\"app-content\">\n          <div\n            style={{\n              marginTop: 64,\n              padding: 0,\n              minHeight: 'calc(100vh - 85px)'\n            }}>\n            {props.children}\n          </div>\n        </Content>\n\n        {/* <Footer style={{ textAlign: 'center' }}>Graphometrica © 2021</Footer> */}\n      </Layout>\n    </Layout >\n  )\n}\n","import { Button, Space } from 'antd';\nimport { useStore } from 'effector-react';\nimport React from 'react';\n\n\n\nexport const HomePage = () => {\n\n\n  return (\n    <div>\n\n      <p>Home page</p>\n\n    </div>\n  )\n}\n","import { CheckCircleOutlined, CoffeeOutlined, NodeIndexOutlined, SmileOutlined } from '@ant-design/icons';\nimport { Button, Result, Space } from 'antd';\nimport React from 'react';\n\n\n\nexport const NoData: React.FC<{\n  icon?: string,\n  message?: string,\n  extra?: React.FC\n}> = ({ message, extra, icon }) => {\n\n\n  return (\n    <Result\n      icon={icon === 'ok' ? <CheckCircleOutlined /> : <NodeIndexOutlined />}\n      title={message || 'Здесь пока ничего нет'}\n      extra={extra}\n    />\n  )\n}\n","import { Tag } from 'antd';\nimport React from 'react';\nimport { useStationsByStationId } from 'src/store';\nimport { invertColor } from 'src/utils';\n\n\n\nexport const MetroIcon: React.FC<{\n  stationId: string,\n}> = ({ stationId }) => {\n  const stationsByStationId = useStationsByStationId()\n\n  const station = stationsByStationId[stationId];\n\n\n  return (\n    <Tag style={{\n      background: '#' + station.line.color,\n      color: invertColor(station.line.color),\n      borderRadius: 12\n    }}>м</Tag>)\n}\n","import { NodeIndexOutlined } from '@ant-design/icons';\nimport { Button, Space, Steps, Tag } from 'antd';\nimport { useStore } from 'effector-react';\nimport React from 'react';\nimport { IStation } from 'src/store';\n\nconst { Step } = Steps;\nexport const SourceRoute: React.FC<{ stations: IStation[] }> = ({ stations }) => {\n  if (!stations?.length) return null;\n  return (\n    <div style={{ marginBottom: 16 }}>\n      <h2>Исходный маршрут &nbsp;<NodeIndexOutlined /></h2>\n      <p>\n        {stations.map((i, index) => {\n          return (\n            <span style={{ fontWeight: 700, color: '#' + i.line.color, paddingRight: 6 }} key={i.id}>\n              м.&nbsp;{i.name}\n              {index < stations.length - 1 ? ', ' : ''}</span>\n          )\n        })}</p>\n\n    </div>\n  )\n}\n","import { LikeOutlined } from '@ant-design/icons';\nimport { Button, Space, Steps, Tag } from 'antd';\nimport { useStore } from 'effector-react';\nimport React from 'react';\nimport { MetroIcon } from 'src/components';\nimport { IStation } from 'src/store';\n\nconst { Step } = Steps;\nexport const OptimizedRoute: React.FC<{ stations: IStation[] }> = ({ stations }\n) => {\n\n  if (!stations?.length) return null;\n  return (\n    <>\n      <h2>Оптимальный маршрут &nbsp;<LikeOutlined /></h2>\n      <Steps direction=\"vertical\" current={stations.length - 2}>\n        {stations?.filter((i, index) => index < stations.length - 1)\n          .map(i => {\n            return (\n              <Step key={i.id} title={i.name}\n                icon={<span style={{ paddingLeft: 2 }}><MetroIcon stationId={i.stationId} /></span>}\n                description={<div className=\"ant-steps-item-description\">{i.line.name}</div>} />\n            )\n          })}\n\n      </Steps>\n    </>\n  )\n}\n","import { Button, Collapse, Descriptions, Divider, Space, Tag } from 'antd';\nimport React from 'react';\nimport { CSVLink } from 'react-csv';\nimport { NoData, SourceRoute } from 'src/components';\nimport { IRoute, useLines, useRoutes, useStations } from 'src/store';\nimport { convertJsonStringToCsv, genericDateToRusDateTime } from 'src/utils';\n\nimport { OptimizedRoute } from './OptimizedRoute';\n\n\nconst { Panel } = Collapse;\n\nexport const CalculatedPage = () => {\n\n  const lines = useLines();\n  const stations = useStations();\n\n  const routes = useRoutes();\n\n  const [data, setData] = React.useState<IRoute[]>([]);\n\n  React.useEffect(() => {\n\n    if (stations.length && lines.length && routes.length > 0) {\n      setData(routes.filter(i => i.status === 3))\n    }\n\n  }, [stations, lines, routes])\n\n\n  if (!data.length) {\n    return <NoData message=\"Посчитанных маршрутов пока нет\" />\n  }\n\n  return (\n    <Collapse defaultActiveKey={[data[0]?.routeId]}>\n      {data.map(i => {\n\n        const created = genericDateToRusDateTime(i.created, true)\n        const calculated = genericDateToRusDateTime(i.calculated, true)\n\n        return (\n          <Panel key={i.routeId}\n            style={{ background: '#f6ffed' }}\n            header={<>\n\n              <Tag color=\"blue\">Посчитано</Tag>\n              <span style={{ fontSize: 10, paddingRight: 12 }}>{created}</span>\n              <span style={{ fontSize: 10, paddingRight: 12 }}>кол-во: {i.stationInstances.length}</span>\n\n            </>}>\n            <Descriptions >\n              <Descriptions.Item label=\"Создан\">{created}</Descriptions.Item>\n              <Descriptions.Item label=\"Solution type\">{i.result.solutionType}</Descriptions.Item>\n              <Descriptions.Item label=\"Тип бэкенда\">{i.result.solverType}</Descriptions.Item>\n              <Descriptions.Item label=\"Посчитан\">{calculated}</Descriptions.Item>\n              <Descriptions.Item label=\"Ham energy\">\n                {i.result.hamEnergy}\n              </Descriptions.Item>\n            </Descriptions>\n\n            <Divider></Divider>\n\n\n            <SourceRoute stations={i.stationInstances}></SourceRoute>\n\n            <Divider></Divider>\n            <OptimizedRoute stations={i.result.routeInstances} />\n\n\n            <Divider></Divider>\n            <Space direction={\"vertical\"} style={{ marginBottom: 32 }}>\n\n              <CSVLink\n                style={{ width: 245 }}\n                filename={\"route.csv\"}\n                className=\"ant-btn ant-btn-primary\"\n                data={i.result.routeCsv}\n              >Скачать маршрут в CSV</CSVLink>\n\n              <CSVLink\n                style={{ width: 245 }}\n                filename={\"quboMatrix.csv\"}\n                className=\"ant-btn\"\n                data={convertJsonStringToCsv(i.result.quboMatrixCsv)}\n              >Скачать Qubo Matrix в CSV</CSVLink>\n\n              <CSVLink\n                style={{ width: 245 }}\n                filename={\"adjacencyMatrix.csv\"}\n                className=\"ant-btn\"\n                data={convertJsonStringToCsv(i.result.adjacencyMatrixCsv)}\n              >Скачать Adjacency Matrix в CSV</CSVLink>\n\n            </Space>\n\n          </Panel>\n        )\n      })}\n\n    </Collapse>\n  )\n}\n","import { Button, Collapse, Space, Tag } from 'antd';\nimport React from 'react';\nimport { NoData, SourceRoute } from 'src/components';\nimport { IRoute, useLines, useLinesById, useRoutes, useStations, useStationsByStationId } from 'src/store';\nimport { genericDateToRusDateTime } from 'src/utils';\n\nconst { Panel } = Collapse;\n\nexport const QueuePage = () => {\n\n  const lines = useLines();\n  const stations = useStations();\n\n  const routes = useRoutes();\n\n\n  const [data, setData] = React.useState<IRoute[]>([]);\n\n  React.useEffect(() => {\n\n    if (stations.length && lines.length && routes.length > 0) {\n      setData(routes.filter(i => i.status !== 3))\n    }\n\n  }, [stations, lines, routes])\n\n\n\n  if (!data.length) {\n    return <NoData icon=\"ok\" message=\"Все маршруты посчитались\" />\n  }\n\n  return (\n    <Collapse defaultActiveKey={data.map(i => i.routeId)}>\n      {data.map(i => {\n\n        const created = genericDateToRusDateTime(i.created, true)\n\n        return (\n          <Panel key={i.routeId}\n            style={{ background: '#fffbe6' }}\n            header={<>\n\n              <Tag color=\"blue\">В очереди</Tag>\n              <span style={{ fontSize: 10, paddingRight: 12 }}>{created}</span>\n              <span style={{ fontSize: 10, paddingRight: 12 }}>кол-во: {i.stationInstances.length}</span>\n\n            </>}>\n            <SourceRoute stations={i.stationInstances}></SourceRoute>\n            <p>количество станций в маршруте: {i.stationInstances.length}</p>\n          </Panel>\n        )\n      })}\n\n    </Collapse >\n  )\n}\n","import { CalculatorOutlined, FireFilled, NodeIndexOutlined } from '@ant-design/icons';\nimport { Affix, Button, Col, message, Row, Space, Tag, Transfer } from 'antd';\nimport { useStore } from 'effector-react';\nimport React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { MetroIcon } from 'src/components';\nimport {\n  createRouteFx,\n  IRoute,\n  useCreateRouteIsBusy,\n  useLines,\n  useLinesById,\n  useStations,\n  useStationsByStationId,\n} from 'src/store';\nimport { invertColor } from 'src/utils';\n\n\nexport const SelectByTransfer = (props: any) => {\n\n  const lines = useLines();\n  const stations = useStations();\n  // const stationsByStationId = useStationsByStationId()\n  // const linesById = useLinesById();\n\n\n  const [transferItems, setTransferItems] = React.useState<Array<{\n    key?: string,\n    title?: string,\n    description?: string,\n    disabled?: boolean,\n    [name: string]: any\n  }>>([]);\n\n  React.useEffect(() => {\n\n    if (stations.length && lines.length) {\n\n\n      const result = stations.map(i => ({\n        key: i.stationId,\n        title: i.name\n      }))\n\n\n      setTransferItems(result)\n    }\n\n  }, [stations, lines])\n\n  const [selected, setSelected] = React.useState([])\n  const [keys, setKeys] = React.useState([])\n\n  const filterOption = (inputValue, option) => {\n    return option.title.toLowerCase().indexOf(inputValue.toLowerCase()) >= 0\n  }\n\n  const handleChange = (targetKeys) => {\n\n    if (targetKeys.length <= 5) {\n      setSelected(targetKeys)\n    } else {\n      message.warning('Максимальное кол-во станций: 5');\n\n      setSelected(targetKeys.reverse()\n        .filter((i, index) => index <= 4).reverse())\n\n    }\n  }\n\n  const handleSelectChange = (newKeys) => {\n\n\n    if (newKeys.length <= 5) {\n      setKeys(newKeys)\n    } else {\n      message.warning('Максимальное кол-во станций: 5');\n\n      setKeys(newKeys.reverse()\n        .filter((i, index) => index <= 4).reverse())\n\n    }\n\n  }\n\n  const history = useHistory()\n  const calculateRoute = () => {\n    const route: IRoute = {\n      stations: selected\n    };\n    createRouteFx(route).then(_ => {\n      setSelected([])\n      setKeys([])\n      history.push('queue')\n    })\n\n  }\n\n  const isBusy = useCreateRouteIsBusy()\n\n  return (\n    <>\n      <div\n        className='create-route-bar'\n        style={{\n          position: 'fixed',\n          right: 0,\n          zIndex: 2,\n          top: 68\n\n        }}\n      ><Button\n        disabled={selected.length < 3}\n        loading={isBusy}\n        onClick={calculateRoute}\n        className='calculate-route-button gradient-btn'\n        style={{\n\n          fontWeight: 700\n        }}\n        type=\"primary\"\n      ><NodeIndexOutlined /> ПОСТРОИТЬ<br />МАРШРУТ</Button></div>\n      <Transfer\n        style={{ minWidth: '350px' }}\n        locale={{\n          notFoundContent: 'Нет данных',\n          searchPlaceholder: 'Начните ввод для поиска',\n          itemUnit: 'станция',\n          itemsUnit: 'станций',\n          remove: 'убрать'\n        }}\n        listStyle={{\n          width: '30%',\n          minWidth: 350,\n          height: 'calc(100vh - 120px)',\n        }}\n        onSelectChange={handleSelectChange}\n        showSelectAll={false}\n        oneWay\n\n        dataSource={transferItems}\n        showSearch\n        filterOption={filterOption}\n        targetKeys={selected}\n        selectedKeys={keys}\n        onChange={handleChange}\n        render={item => {\n          return (\n            <Space>\n              <MetroIcon stationId={item.key} />\n              <span>{item.title}</span>\n            </Space>\n          )\n        }}\n      />\n    </>\n  )\n}\n","import { LoadingOutlined } from '@ant-design/icons';\nimport { Affix, Button, Space, Spin } from 'antd';\nimport { useStore } from 'effector-react';\nimport React from 'react';\nimport { getRoutesFx, useLines, useStations } from 'src/store';\n\nimport { SelectByTransfer } from './SelectByTransfer';\n\n\nexport const SelectStationsPage = () => {\n  const lines = useLines();\n  const stations = useStations();\n\n\n\n  return (\n    <div>\n      {(!lines.length || !stations.length) && (\n        <>\n          <div style={{ marginTop: 128 }}>Подождите, загружаю данные &nbsp; <Spin indicator={<LoadingOutlined style={{ fontSize: 24, color: '#753a88' }} spin />} /> </div>\n        </>\n      )}\n\n      {!!lines.length && !!stations.length && (\n        <SelectByTransfer />\n\n      )}\n\n\n    </div>\n  )\n}\n","import React from 'react';\nimport { HashRouter as Router, Route, Switch, useHistory, useLocation, useParams } from 'react-router-dom';\n\nimport { LayoutContainer } from './layout';\nimport { CalculatedPage, HomePage, QueuePage, SelectStationsPage } from './pages';\nimport { downloadDataFx, getLinesFx, getRoutesFx, getStationsFx } from './store';\n\n\nfunction App() {\n  const history = useHistory()\n  const location = useLocation();\n\n\n\n  React.useEffect(() => {\n    downloadDataFx()\n  }, [])\n\n  React.useEffect(() => {\n    return history.listen((newLocation) => {\n      downloadDataFx();\n    })\n  }, [location.pathname])\n\n\n  return (\n\n    <>\n      <Route path=\"/test\" exact >\n        <LayoutContainer>\n          <HomePage />\n        </LayoutContainer>\n      </Route>\n\n      <Route path=\"/\" exact >\n        <LayoutContainer>\n          <SelectStationsPage />\n        </LayoutContainer>\n      </Route>\n\n      <Route path=\"/queue\" exact >\n        <LayoutContainer>\n          <QueuePage />\n        </LayoutContainer>\n      </Route>\n\n      <Route path=\"/calculated\" exact >\n        <LayoutContainer>\n          <CalculatedPage />\n        </LayoutContainer>\n      </Route>\n    </>\n  );\n}\n\nexport default App;\n","import './assets/styles/App.less';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { QueryClient, QueryClientProvider, useQuery } from 'react-query';\nimport { ReactQueryDevtools } from 'react-query/devtools';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport App from './App';\n\n\nconst queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      notifyOnChangeProps: 'tracked',\n    },\n    mutations: {\n\n    }\n  }\n});\n\n\n\nReactDOM.render(\n\n  <QueryClientProvider client={queryClient}>\n    <Router>\n      <App />\n    </Router>\n    {/* <ReactQueryDevtools initialIsOpen={true} /> */}\n  </QueryClientProvider>\n  ,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}